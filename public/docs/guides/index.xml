<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ Guides</title><link>http://localhost:1313/docs/guides/</link><description>Recent content in Guides on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 02 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/docs/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Feature Stages</title><link>http://localhost:1313/docs/guides/feature-stages/</link><pubDate>Thu, 26 Sep 2019 01:20:41 +0000</pubDate><guid>http://localhost:1313/docs/guides/feature-stages/</guid><description>
&lt;h2 id="supported-versions">Supported Versions&lt;/h2>
&lt;p>Code Blind versions are expressed as x.y.z, where x is the major version, y is the minor version, and z is the patch version
following &lt;a href="http://semver.org/">Semantic Versioning&lt;/a> terminology.&lt;/p>
&lt;h2 id="code-blind-features">Code Blind Features&lt;/h2>
&lt;p>A feature within Code Blind can be in &lt;code>Alpha&lt;/code>, &lt;code>Beta&lt;/code> or &lt;code>Stable&lt;/code> stage.&lt;/p>
&lt;h2 id="feature-gates">Feature Gates&lt;/h2>
&lt;p>&lt;code>Alpha&lt;/code> and &lt;code>Beta&lt;/code> features can be enabled or disabled through the &lt;code>agones.featureGates&lt;/code> configuration option
that can be found in the &lt;a href="http://localhost:1313/docs/installation/install-agones/helm/#configuration">Helm configuration&lt;/a> documentation.&lt;/p>
&lt;p>The current set of &lt;code>alpha&lt;/code> and &lt;code>beta&lt;/code> feature gates:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature Name&lt;/th>
&lt;th>Gate&lt;/th>
&lt;th>Default&lt;/th>
&lt;th>Stage&lt;/th>
&lt;th>Since&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="http://localhost:1313/docs/guides/fleet-updates/#notifying-gameservers-on-fleet-updatedownscale">Allocated GameServers are notified on relevant Fleet Updates&lt;/a>&lt;/td>
&lt;td>&lt;code>FleetAllocationOverflow&lt;/code>&lt;/td>
&lt;td>Enabled&lt;/td>
&lt;td>&lt;code>Beta&lt;/code>&lt;/td>
&lt;td>1.37.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/googleforgames/agones/issues/2716">CountsAndLists&lt;/a>&lt;/td>
&lt;td>&lt;code>CountsAndLists&lt;/code>&lt;/td>
&lt;td>Disabled&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>1.37.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/googleforgames/agones/issues/1239">GameServer player capacity filtering on GameServerAllocations&lt;/a>&lt;/td>
&lt;td>&lt;code>PlayerAllocationFilter&lt;/code>&lt;/td>
&lt;td>Disabled&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>1.14.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://localhost:1313/docs/guides/player-tracking/">Player Tracking&lt;/a>&lt;/td>
&lt;td>&lt;code>PlayerTracking&lt;/code>&lt;/td>
&lt;td>Disabled&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>1.6.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/googleforgames/agones/issues/3377">DisableResyncOnSDKServer&lt;/a>&lt;/td>
&lt;td>&lt;code>DisableResyncOnSDKServer&lt;/code>&lt;/td>
&lt;td>Disabled&lt;/td>
&lt;td>&lt;code>Alpha&lt;/code>&lt;/td>
&lt;td>1.37.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Example Gate (not in use)&lt;/td>
&lt;td>&lt;code>Example&lt;/code>&lt;/td>
&lt;td>Disabled&lt;/td>
&lt;td>None&lt;/td>
&lt;td>0.13.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If you aren&amp;rsquo;t sure if Feature Flags have been set correctly, have a look at the
&lt;em>&lt;a href="http://localhost:1313/docs/guides/troubleshooting/#the-feature-flag-i-enableddisabled-isnt-working-as-expected">The Feature Flag I enabled/disabled isn&amp;rsquo;t working as expected&lt;/a>&lt;/em>
troubleshooting section.
&lt;/div>
&lt;h2 id="description-of-stages">Description of Stages&lt;/h2>
&lt;h3 id="alpha">Alpha&lt;/h3>
&lt;p>An &lt;code>Alpha&lt;/code> feature means:&lt;/p>
&lt;ul>
&lt;li>Disabled by default.&lt;/li>
&lt;li>Might be buggy. Enabling the feature may expose bugs.&lt;/li>
&lt;li>Support for this feature may be dropped at any time without notice.&lt;/li>
&lt;li>The API may change in incompatible ways in a later software release without notice.&lt;/li>
&lt;li>Recommended for use only in short-lived testing clusters, due to increased risk of bugs and lack of long-term support.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Please do try &lt;code>Alpha&lt;/code> features and give feedback on them. This is important to ensure less breaking changes
through the &lt;code>Beta&lt;/code> period.
&lt;/div>
&lt;h3 id="beta">Beta&lt;/h3>
&lt;p>A &lt;code>Beta&lt;/code> feature means:&lt;/p>
&lt;ul>
&lt;li>Enabled by default, but able to be disabled through a feature gate.&lt;/li>
&lt;li>The feature is well tested. Enabling the feature is considered safe.&lt;/li>
&lt;li>Support for the overall feature will not be dropped, though details may change.&lt;/li>
&lt;li>The schema and/or semantics of objects may change in incompatible ways in a subsequent beta or stable releases. When
this happens, we will provide instructions for migrating to the next version. This may require deleting, editing,
and re-creating API objects. The editing process may require some thought. This may require downtime for
applications that rely on the feature.&lt;/li>
&lt;li>Recommended for only non-business-critical uses because of potential for incompatible changes in subsequent releases.
If you have multiple clusters that can be upgraded independently, you may be able to relax this restriction.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Note: Please do try &lt;code>Beta&lt;/code> features and give feedback on them! After they exit beta, it may not be practical for us
to make more changes.
&lt;/div>
&lt;h3 id="stable">Stable&lt;/h3>
&lt;p>A &lt;code>Stable&lt;/code> feature means:&lt;/p>
&lt;ul>
&lt;li>The feature is enabled and the corresponding feature gate no longer exists.&lt;/li>
&lt;li>Stable versions of features will appear in released software for many subsequent versions.&lt;/li>
&lt;/ul>
&lt;h2 id="feature-stage-indicators">Feature Stage Indicators&lt;/h2>
&lt;p>There are a variety of features with Code Blind, how can we determine what stage each feature is in?&lt;/p>
&lt;p>Below are indicators for each type of functionality that can be used to determine the feature stage for a given aspect
of Code Blind.&lt;/p>
&lt;h3 id="custom-resource-definitions-crds">Custom Resource Definitions (CRDs)&lt;/h3>
&lt;p>This refers to Kubernetes resource for Code Blind, such as &lt;code>GameServer&lt;/code>, &lt;code>Fleet&lt;/code> and &lt;code>GameServerAllocation&lt;/code>.&lt;/p>
&lt;h4 id="new-crds">New CRDs&lt;/h4>
&lt;p>For new resources, the stage of the resource will be indicated by the &lt;code>apiVersion&lt;/code> of the resource.&lt;/p>
&lt;p>For example: &lt;code>apiVersion: &amp;quot;agones.dev/v1&amp;quot;&lt;/code> is a &lt;code>stable&lt;/code> resource, &lt;code>apiVersion: &amp;quot;agones.dev/v1beta1&amp;quot;&lt;/code> is a &lt;code>beta&lt;/code>
stage resource, and &lt;code>apiVersion: &amp;quot;agones.dev/v1alpha1&amp;quot;&lt;/code> is an &lt;code>alpha&lt;/code> stage resource.&lt;/p>
&lt;h4 id="new-crd-attributes">New CRD attributes&lt;/h4>
&lt;p>When &lt;code>alpha&lt;/code> and &lt;code>beta&lt;/code> attributes are added to an existing stable Code Blind CRD, we will follow the Kubernetes &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md#adding-unstable-features-to-stable-versions">&lt;em>Adding
Unstable Features to Stable Versions&lt;/em>&lt;/a>
Guide to optimise on the least amount of breaking changes for users as attributes progress through feature stages.&lt;/p>
&lt;p>&lt;code>alpha&lt;/code> and &lt;code>beta&lt;/code> attributes will be added to the existing CRD as &lt;code>optional&lt;/code> and documented with their feature stage.
Attempting to populate these &lt;code>alpha&lt;/code> and &lt;code>beta&lt;/code> attributes on an Code Blind CRD will return a validation error if their
accompanying Feature Flag is not enabled.&lt;/p>
&lt;p>&lt;code>alpha&lt;/code> and &lt;code>beta&lt;/code> attributes can be subject to change of name and structure, and will result in breaking changes
before moving to a &lt;code>stable&lt;/code> stage. These changes will be outlined in release notes and feature documentation.&lt;/p>
&lt;h3 id="code-blind-game-server-sdk">Code Blind Game Server SDK&lt;/h3>
&lt;p>Any &lt;code>alpha&lt;/code> or &lt;code>beta&lt;/code> Game Server SDK functionality will be a subpackage of the &lt;code>sdk&lt;/code> package. For example
, functionality found in a &lt;code>sdk.alphav1&lt;/code> package should be considered at the &lt;code>alpha&lt;/code> feature stage.&lt;/p>
&lt;p>Only experimental functionality will be found in any &lt;code>alpha&lt;/code> and &lt;code>beta&lt;/code> SDK packages, and as such may change as
development occurs.&lt;/p>
&lt;p>As SDK features move to through feature stages towards &lt;code>stable&lt;/code>, the previous version of the SDK API
will remain for at least one release to enable easy migration to the more stable feature stage (i.e. from &lt;code>alpha &lt;/code> -&amp;gt; &lt;code>beta&lt;/code>, &lt;code>beta&lt;/code> -&amp;gt; &lt;code>stable&lt;/code>)&lt;/p>
&lt;p>Any other SDK functionality not marked as &lt;code>alpha&lt;/code> or &lt;code>beta&lt;/code> is assumed to be &lt;code>stable&lt;/code>.&lt;/p>
&lt;h3 id="rest--grpc-apis">REST &amp;amp; gRPC APIs&lt;/h3>
&lt;p>REST and gRPC API will have versioned paths where appropriate to indicate their feature stage.&lt;/p>
&lt;p>For example, a REST API with a prefix of &lt;code>v1alpha1&lt;/code> is an &lt;code>alpha&lt;/code> stage feature:
&lt;code>http://api.example.com/v1alpha1/exampleaction&lt;/code>.&lt;/p>
&lt;p>Similar to the SDK, any &lt;code>alpha&lt;/code> or &lt;code>beta&lt;/code> gRPC functionality will be a subpackage of the main API package.
For example, functionality found in a &lt;code>api.alphav1&lt;/code> package should be considered at the &lt;code>alpha&lt;/code> feature stage.&lt;/p></description></item><item><title>Docs: Best Practices</title><link>http://localhost:1313/docs/guides/best-practices/</link><pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/guides/best-practices/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Running Code Blind in production takes consideration, from planning your launch to figuring
out the best course of action for cluster and Code Blind upgrades. On this page, we&amp;rsquo;ve collected
some general best practices. We also have cloud specific pages for:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/best-practices/gke/">Google Kubernetes Engine (GKE)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you are interested in submitting best practices for your cloud prodiver / on-prem, &lt;a href="http://localhost:1313/docs/contribute/">please contribute!&lt;/a>&lt;/p>
&lt;h2 id="separation-of-code-blind-from-gameserver-nodes">Separation of Code Blind from GameServer nodes&lt;/h2>
&lt;p>When running in production, Code Blind should be scheduled on a dedicated pool of nodes, distinct from where Game Servers
are scheduled for better isolation and resiliency. By default Code Blind prefers to be scheduled on nodes labeled with
&lt;code>agones.dev/agones-system=true&lt;/code> and tolerates the node taint &lt;code>agones.dev/agones-system=true:NoExecute&lt;/code>.
If no dedicated nodes are available, Code Blind will run on regular nodes. See &lt;a href="https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/">taints and tolerations&lt;/a>
for more information about Kubernetes taints and tolerations.&lt;/p>
&lt;p>If you are collecting &lt;a href="http://localhost:1313/docs/guides/metrics/">Metrics&lt;/a> using our standard Prometheus installation, see
&lt;a href="http://localhost:1313/docs/guides/metrics/#prometheus-installation">the installation guide&lt;/a> for instructions on configuring a separate node pool for the &lt;code>agones.dev/agones-metrics=true&lt;/code> taint.&lt;/p>
&lt;p>See &lt;a href="http://localhost:1313/docs/installation/creating-cluster/">Creating a Cluster&lt;/a> for initial set up on your cloud provider.&lt;/p>
&lt;h2 id="redundant-clusters">Redundant Clusters&lt;/h2>
&lt;h3 id="allocate-across-clusters">Allocate Across Clusters&lt;/h3>
&lt;p>Code Blind supports &lt;a href="http://localhost:1313/docs/advanced/multi-cluster-allocation/">Multi-cluster Allocation&lt;/a>, allowing you to allocate from a set of clusters, versus a single point of potential failure. There are several other options for multi-cluster allocation:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/anthos/service-mesh">Anthos Service Mesh&lt;/a> can be used to route allocation traffic to different clusters based on arbitrary criteria. See &lt;a href="https://github.com/googleforgames/global-multiplayer-demo">Global Multiplayer Demo&lt;/a> for an example where the match maker influences which cluster the allocation is routed to.&lt;/li>
&lt;li>&lt;a href="https://github.com/googleforgames/agones/tree/main/examples/allocation-endpoint">Allocation Endpoint&lt;/a> can be used in Cloud Run to proxy allocation requests.&lt;/li>
&lt;li>Or peruse the &lt;a href="http://localhost:1313/docs/third-party-content/libraries-tools/#allocation">Third Party Examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="spread">Spread&lt;/h3>
&lt;p>You should consider spreading your game servers in two ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Across geographic fault domains&lt;/strong> (&lt;a href="https://cloud.google.com/compute/docs/regions-zones">GCP regions&lt;/a>, &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">AWS availability zones&lt;/a>, separate datacenters, etc.): This is desirable for geographic fault isolation, but also for optimizing client latency to the game server.&lt;/li>
&lt;li>&lt;strong>Within a fault domain&lt;/strong>: Kubernetes Clusters are single points of failure. A single misconfigured RBAC rule, an overloaded Kubernetes Control Plane, etc. can prevent new game server allocations, or worse, disrupt existing sessions. Running multiple clusters within a fault domain also allows for &lt;a href="http://localhost:1313/docs/installation/upgrading/#upgrading-agones-multiple-clusters">easier upgrades&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Code Blind Game Server Client SDKs</title><link>http://localhost:1313/docs/guides/client-sdks/</link><pubDate>Wed, 02 Jan 2019 10:16:30 +0000</pubDate><guid>http://localhost:1313/docs/guides/client-sdks/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The client SDKs are required for a game server to work with Code Blind.&lt;/p>
&lt;p>The current supported SDKs are:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/unreal/">Unreal Engine&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/unity/">Unity&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/cpp/">C++&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/csharp/">C#&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/nodejs/">Node.js&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/go/">Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/rust/">Rust&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/client-sdks/rest/">REST&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>You can also find some externally supported SDKs in our
&lt;a href="http://localhost:1313/docs/third-party-content/libraries-tools/#client-sdks">Third Party Content&lt;/a>.&lt;/p>
&lt;p>The SDKs are relatively thin wrappers around &lt;a href="https://grpc.io">gRPC&lt;/a> generated clients,
or an implementation of the REST API (exposed via &lt;a href="https://github.com/grpc-ecosystem/grpc-gateway">grpc-gateway&lt;/a>),
where gRPC client generation and compilation isn&amp;rsquo;t well supported.&lt;/p>
&lt;p>They connect to a small process that Code Blind coordinates to run alongside the Game Server
in a Kubernetes &lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/">&lt;code>Pod&lt;/code>&lt;/a>.
This means that more languages can be supported in the future with minimal effort
(but pull requests are welcome! ðŸ˜Š ).&lt;/p>
&lt;p>There is also &lt;a href="http://localhost:1313/docs/guides/client-sdks/local/">local development tooling&lt;/a> for working against the SDK locally,
without having to spin up an entire Kubernetes infrastructure.&lt;/p>
&lt;h2 id="connecting-to-the-sdk-server">Connecting to the SDK Server&lt;/h2>
&lt;p>Starting with Code Blind 1.1.0, the port that the SDK Server listens on for incoming gRPC or HTTP requests is
configurable. This provides flexibility in cases where the default port conflicts with a port that is needed
by the game server.&lt;/p>
&lt;p>Code Blind will automatically set the following environment variables on all game server containers:&lt;/p>
&lt;ul>
&lt;li>&lt;code>AGONES_SDK_GRPC_PORT&lt;/code>: The port where the gRPC server is listening (defaults to 9357)&lt;/li>
&lt;li>&lt;code>AGONES_SDK_HTTP_PORT&lt;/code>: The port where the grpc-gateway is listening (defaults to 9358)&lt;/li>
&lt;/ul>
&lt;p>The SDKs will automatically discover and connect to the gRPC port specified in the environment variable.&lt;/p>
&lt;p>If your game server requires using a REST client, it is advised to use the port from the environment variable,
otherwise your game server will not be able to contact the SDK server if it is configured to use a non-default port.&lt;/p>
&lt;h2 id="function-reference">Function Reference&lt;/h2>
&lt;p>While each of the SDKs are canonical to their languages, they all have the following
functions that implement the core responsibilities of the SDK.&lt;/p>
&lt;p>For language specific documentation, have a look at the respective source (linked above),
and the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>examples&lt;/a>.&lt;/p>
&lt;p>Calling any of state changing functions mentioned below does not guarantee that GameServer Custom Resource object would actually change its state right after the call. For instance, it could be moved to the &lt;code>Shutdown&lt;/code> state elsewhere (for example, when a fleet scales down), which leads to no changes in &lt;code>GameServer&lt;/code> object. You can verify the result of this call by waiting for the desired state in a callback to WatchGameServer() function.&lt;/p>
&lt;p>Functions which changes GameServer state or settings are:&lt;/p>
&lt;ol>
&lt;li>Ready()&lt;/li>
&lt;li>Shutdown()&lt;/li>
&lt;li>SetLabel()&lt;/li>
&lt;li>SetAnnotation()&lt;/li>
&lt;li>Allocate()&lt;/li>
&lt;li>Reserve()&lt;/li>
&lt;li>Alpha().SetCapacity()&lt;/li>
&lt;li>Alpha().PlayerConnect()&lt;/li>
&lt;li>Alpha().PlayerDisconnect()&lt;/li>
&lt;li>Alpha().SetCounterCount()&lt;/li>
&lt;li>Alpha().IncrementCounter()&lt;/li>
&lt;li>Alpha().DecrementCounter()&lt;/li>
&lt;li>Alpha().SetCounterCapacity()&lt;/li>
&lt;li>Alpha().AppendListValue()&lt;/li>
&lt;li>Alpha().DeleteListValue()&lt;/li>
&lt;li>Alpha().SetListCapacity()&lt;/li>
&lt;/ol>
&lt;h3 id="lifecycle-management">Lifecycle Management&lt;/h3>
&lt;h4 id="ready">Ready()&lt;/h4>
&lt;p>This tells Code Blind that the Game Server is ready to take player connections.
Once a Game Server has specified that it is &lt;code>Ready&lt;/code>, then the Kubernetes
GameServer record will be moved to the &lt;code>Ready&lt;/code> state, and the details
for its public address and connection port will be populated.&lt;/p>
&lt;p>While Code Blind prefers that &lt;code>Shutdown()&lt;/code> is run once a game has completed to delete the &lt;code>GameServer&lt;/code> instance,
if you want or need to move an &lt;code>Allocated&lt;/code> &lt;code>GameServer&lt;/code> back to &lt;code>Ready&lt;/code> to be reused, you can call this SDK method again to do
this.&lt;/p>
&lt;h4 id="health">Health()&lt;/h4>
&lt;p>This sends a single ping to designate that the Game Server is alive and
healthy. Failure to send pings within the configured thresholds will result
in the GameServer being marked as &lt;code>Unhealthy&lt;/code>.&lt;/p>
&lt;p>See the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>gameserver.yaml&lt;/a> for all health checking
configurations.&lt;/p>
&lt;h4 id="reserveseconds">Reserve(seconds)&lt;/h4>
&lt;p>With some matchmaking scenarios and systems it is important to be able to ensure that a &lt;code>GameServer&lt;/code> is unable to be deleted,
but doesn&amp;rsquo;t trigger a FleetAutoscaler scale up. This is where &lt;code>Reserve(seconds)&lt;/code> is useful.&lt;/p>
&lt;p>&lt;code>Reserve(seconds)&lt;/code> will move the &lt;code>GameServer&lt;/code> into the Reserved state for the specified number of seconds (0 is forever), and then it will be
moved back to &lt;code>Ready&lt;/code> state. While in &lt;code>Reserved&lt;/code> state, the &lt;code>GameServer&lt;/code> will not be deleted on scale down or &lt;code>Fleet&lt;/code> update,
and also it could not be Allocated using &lt;a href="http://localhost:1313/docs/reference/gameserverallocation/">GameServerAllocation&lt;/a>.&lt;/p>
&lt;p>This is often used when a game server process must register itself with an external system, such as a matchmaker,
that requires it to designate itself as available for a game session for a certain period. Once a game session has started,
it should call &lt;code>SDK.Allocate()&lt;/code> to designate that players are currently active on it.&lt;/p>
&lt;p>Calling other state changing SDK commands such as &lt;code>Ready&lt;/code> or &lt;code>Allocate&lt;/code> will turn off the timer to reset the &lt;code>GameServer&lt;/code> back
to the &lt;code>Ready&lt;/code> state or to promote it to an &lt;code>Allocated&lt;/code> state accordingly.&lt;/p>
&lt;h4 id="allocate">Allocate()&lt;/h4>
&lt;p>With some matchmakers and game matching strategies, it can be important for game servers to mark themselves as &lt;code>Allocated&lt;/code>.
For those scenarios, this SDK functionality exists.&lt;/p>
&lt;p>There is a chance that GameServer does not actually become &lt;code>Allocated&lt;/code> after this call. Please refer to the general note in &lt;a href="http://localhost:1313/docs/guides/client-sdks/#function-reference">Function Reference&lt;/a> above.&lt;/p>
&lt;p>The &lt;code>agones.dev/last-allocated&lt;/code> annotation will be set on the GameServer to an RFC3339 formatted timestamp of the time of allocation, even if the GameServer was already in an &lt;code>Allocated&lt;/code> state.&lt;/p>
&lt;p>Note that if using &lt;code>SDK.Allocate()&lt;/code> in combination with &lt;a href="http://localhost:1313/docs/reference/gameserverallocation/">GameServerAllocation&lt;/a>s, it&amp;rsquo;s possible for the &lt;code>agones.dev/last-allocated&lt;/code> timestamp to move backwards if clocks are not synchronized between the Code Blind controller and the GameServer pod.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Using a &lt;a href="http://localhost:1313/docs/reference/gameserverallocation/">GameServerAllocation&lt;/a> is preferred in all other scenarios,
as it gives Code Blind control over how packed &lt;code>GameServers&lt;/code> are scheduled within a cluster, whereas with &lt;code>Allocate()&lt;/code> you
relinquish control to an external service which likely doesn&amp;rsquo;t have as much information as Code Blind.
&lt;/div>
&lt;h4 id="shutdown">Shutdown()&lt;/h4>
&lt;p>This tells Code Blind to shut down the currently running game server. The GameServer state will be set &lt;code>Shutdown&lt;/code> and the
backing Pod will be Terminated.&lt;/p>
&lt;p>It&amp;rsquo;s worth reading the &lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination">Termination of Pods&lt;/a>
Kubernetes documentation, to understand the termination process, and the related configuration options.&lt;/p>
&lt;p>As a rule of thumb, implement a graceful shutdown in your game sever process when it receives the TERM signal
from Kubernetes when the backing Pod goes into Termination state.&lt;/p>
&lt;p>Be aware that if you use a variation of &lt;code>System.exit(0)&lt;/code> after calling SDK.Shutdown(), your game server container may
restart for a brief period, inline with our &lt;a href="http://localhost:1313/docs/guides/health-checking/#health-failure-strategy">Health Checking&lt;/a> policies.&lt;/p>
&lt;p>If the SDK server receives a TERM signal before calling SDK.Shutdown(),
the SDK server will stay alive for the period of the &lt;code>terminationGracePeriodSeconds&lt;/code> until &lt;code>SDK.Shutdown()&lt;/code> has been called.&lt;/p>
&lt;h3 id="configuration-retrieval">Configuration Retrieval&lt;/h3>
&lt;h4 id="gameserver">GameServer()&lt;/h4>
&lt;p>This returns most of the backing GameServer configuration and Status. This can be useful
for instances where you may want to know Health check configuration, or the IP and Port
the GameServer is currently allocated to.&lt;/p>
&lt;p>Since the GameServer contains an entire &lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/#pod-templates">PodTemplate&lt;/a>
the returned object is limited to that configuration that was deemed useful. If there are
areas that you feel are missing, please &lt;a href="https://github.com/googleforgames/agones/issues">file an issue&lt;/a> or pull request.&lt;/p>
&lt;p>The easiest way to see what is exposed, is to check
the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>&lt;code>sdk.proto&lt;/code>&lt;/a>, specifically at
the &lt;code>message GameServer&lt;/code>.&lt;/p>
&lt;p>For language specific documentation, have a look at the respective source (linked above),
and the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>examples&lt;/a>.&lt;/p>
&lt;h4 id="watchgameserverfunctiongameserver">WatchGameServer(function(gameserver){&amp;hellip;})&lt;/h4>
&lt;p>This executes the passed in callback with the current &lt;code>GameServer&lt;/code> details whenever the underlying &lt;code>GameServer&lt;/code> configuration is updated.
This can be useful to track &lt;code>GameServer &amp;gt; Status &amp;gt; State&lt;/code> changes, &lt;code>metadata&lt;/code> changes, such as labels and annotations, and more.&lt;/p>
&lt;p>In combination with this SDK, manipulating &lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/">Annotations&lt;/a> and
&lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/">Labels&lt;/a> can also be a useful way to communicate information through to running game server processes from outside those processes.
This is especially useful when combined with &lt;code>GameServerAllocation&lt;/code> &lt;a href="http://localhost:1313/docs/reference/gameserverallocation/">applied metadata&lt;/a>.&lt;/p>
&lt;p>Since the GameServer contains an entire &lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/#pod-templates">PodTemplate&lt;/a>
the returned object is limited to that configuration that was deemed useful. If there are
areas that you feel are missing, please &lt;a href="https://github.com/googleforgames/agones/issues">file an issue&lt;/a> or pull request.&lt;/p>
&lt;p>The easiest way to see what is exposed, is to check
the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>&lt;code>sdk.proto&lt;/code>&lt;/a>, specifically at
the &lt;code>message GameServer&lt;/code>.&lt;/p>
&lt;p>For language specific documentation, have a look at the respective source (linked above),
and the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>examples&lt;/a>.&lt;/p>
&lt;h3 id="metadata-management">Metadata Management&lt;/h3>
&lt;h4 id="setlabelkey-value">SetLabel(key, value)&lt;/h4>
&lt;p>This will set a &lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/">Label&lt;/a> value on the backing &lt;code>GameServer&lt;/code>
record that is stored in Kubernetes.&lt;/p>
&lt;p>To maintain isolation, the &lt;code>key&lt;/code> value is automatically prefixed with the value &lt;strong>&amp;ldquo;agones.dev/sdk-&amp;rdquo;&lt;/strong>. This is done for
two main reasons:&lt;/p>
&lt;ul>
&lt;li>The prefix allows the developer to always know if they are accessing or reading a value that could have come, or
may be changed by the client SDK. Much like &lt;code>private&lt;/code> vs &lt;code>public&lt;/code> scope in a programming language, the Code Blind
SDK only gives you access to write to part of the set of labels and annotations that exist on a GameServer.&lt;/li>
&lt;li>The prefix allows for a smaller attack surface if the GameServer container gets compromised. Since the
game container is generally externally exposed, and the Code Blind project doesn&amp;rsquo;t control the binary that is
run within it, limiting exposure if the game server becomes compromised is worth the extra
development friction that comes with having this prefix in place.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>There are limits on the characters that be used for label keys and values. Details are &lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set">here&lt;/a>.&lt;/p>
&lt;p>You will need to take them into account when combined with the label prefix above.&lt;/p>
&lt;/div>
&lt;p>Setting &lt;code>GameServer&lt;/code> labels can be useful if you want information from your running game server process to be
observable or searchable through the Kubernetes API.&lt;/p>
&lt;h4 id="setannotationkey-value">SetAnnotation(key, value)&lt;/h4>
&lt;p>This will set an &lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/">Annotation&lt;/a> value
on the backing &lt;code>GameServer&lt;/code> record that is stored in Kubernetes.&lt;/p>
&lt;p>To maintain isolation, the &lt;code>key&lt;/code> value is automatically prefixed with &lt;strong>&amp;ldquo;agones.dev/sdk-&amp;rdquo;&lt;/strong> for the same reasons as
in &lt;a href="http://localhost:1313/docs/guides/client-sdks/#setlabelkey-value">SetLabel(&amp;hellip;)&lt;/a> above. The isolation is also important as Code Blind uses annotations on the
&lt;code>GameServer&lt;/code> as part of its internal processing.&lt;/p>
&lt;p>Setting &lt;code>GameServer&lt;/code> annotations can be useful if you want information from your running game server process to be
observable through the Kubernetes API.&lt;/p>
&lt;h3 id="counters-and-lists">Counters And Lists&lt;/h3>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>The Counters And Lists feature is currently &lt;strong>&lt;a href="http://localhost:1313/docs/guides/feature-stages/#alpha">Alpha&lt;/a>&lt;/strong>,
not enabled by default, and may change in the future.&lt;/p>
&lt;p>Use the FeatureGate &lt;code>CountsAndLists&lt;/code>
to enable and test this feature.&lt;/p>
&lt;p>See the &lt;a href="http://localhost:1313/docs/guides/feature-stages/#feature-gates">Feature Gate documentation&lt;/a> for details on how to enable features.&lt;/p>
&lt;/div>
&lt;p>The &lt;code>Counters&lt;/code> and &lt;code>Lists&lt;/code> features in the SDK offer a flexible configuration for tracking various entities like
players, rooms, and sessions.&lt;/p>
&lt;p>Declared keys and default values for Counters and Lists are specified in
&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerSpec">&lt;code>GameServer.Spec.Counters&lt;/code> and &lt;code>GameServer.Spec.Lists&lt;/code>&lt;/a> respectively.&lt;/p>
&lt;p>Modified Counter and List values and capacities will be updated
in &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters&lt;/code> and &lt;code>GameServer.Status.Lists&lt;/code>&lt;/a> respectively.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>The SDK batches mutation operations every 1 second for performance reasons. However, changes made and subsequently
retrieved through the SDK will be atomically accurate through the SDK, as those values are tracked within the
SDK Server sidecar process.&lt;/p>
&lt;p>Changes made through Allocation or the Kubernetes API to
&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerSpec">&lt;code>GameServer.Spec.Counters&lt;/code> and &lt;code>GameServer.Spec.Lists&lt;/code>&lt;/a>
will be eventually consistent when being retrieved through the SDK.&lt;/p>
&lt;p>Since the Code Blind SDK server batches the update operations of
&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters&lt;/code> and &lt;code>GameServer.Status.Lists&lt;/code>&lt;/a>
asynchronously, this means that if you update
&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.status&lt;/code>&lt;/a> values
through both the SDK and the Allocation/Kubernetes API, the batch processing may silently truncate some of those values
to the capacity of that Counter or List.&lt;/p>
&lt;/div>
&lt;h4 id="counters">Counters&lt;/h4>
&lt;p>All functions will return an error if the specified &lt;code>key&lt;/code> is not predefined in the
&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerSpec">&lt;code>GameServer.Spec.Counters&lt;/code>&lt;/a> resource configuration.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> For Counters, the default setting for the capacity is preset to 1000. It is recommended to avoid configuring the capacity to max(int64), as doing so could cause problems with &lt;a href="https://github.com/googleforgames/agones/issues/3636">JSON Patch operations&lt;/a>.&lt;/p>
&lt;h5 id="alphagetcountercountkey">Alpha().GetCounterCount(key)&lt;/h5>
&lt;p>This function retrieves either the &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters[key].Count&lt;/code>&lt;/a> or the SDK awaiting-batch
value for a given key, whichever is most up to date.&lt;/p>
&lt;h5 id="alphasetcountercountkey-amount">Alpha().SetCounterCount(key, amount)&lt;/h5>
&lt;p>This function sets the value of &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters[key].Count&lt;/code>&lt;/a> for the given key to the
passed in amount. This operation overwrites any previous values and the new value cannot exceed the Counter&amp;rsquo;s capacity.&lt;/p>
&lt;h5 id="alphaincrementcounterkey-amount">Alpha().IncrementCounter(key, amount)&lt;/h5>
&lt;p>This function increments &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters[key].Count&lt;/code>&lt;/a> for the given key by the passed in
non-negative amount. The function returns an error if the Counter is already at capacity (at time of operation),
indicating no increment will occur.&lt;/p>
&lt;h5 id="alphadecrementcounterkey-amount">Alpha().DecrementCounter(key, amount)&lt;/h5>
&lt;p>This function decreases &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters[key].Count&lt;/code>&lt;/a> for the given key by the passed in
non-negative amount. It returns an error if the Counter&amp;rsquo;s count is already at zero.&lt;/p>
&lt;h5 id="alphasetcountercapacitykey-amount">Alpha().SetCounterCapacity(key, amount)&lt;/h5>
&lt;p>This function sets the maximum &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters[key].Capacity&lt;/code>&lt;/a> for the given key by the
passed in non-negative amount. A capacity value of 0 indicates no capacity limit.&lt;/p>
&lt;h5 id="alphagetcountercapacitykey">Alpha().GetCounterCapacity(key)&lt;/h5>
&lt;p>This function retrieves either the &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Counters[key].Capacity&lt;/code>&lt;/a> or the SDK
awaiting-batch value for the given key, whichever is most up to date.&lt;/p>
&lt;h4 id="lists">Lists&lt;/h4>
&lt;p>All functions will return an error if the specified &lt;code>key&lt;/code> is not predefined in the
&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerSpec">&lt;code>GameServer.Spec.Lists&lt;/code>&lt;/a> resource configuration.&lt;/p>
&lt;h5 id="alphaappendlistvaluekey-value">Alpha().AppendListValue(key, value)&lt;/h5>
&lt;p>This function appends the specified string value to the List
in &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Lists[key].Values&lt;/code>&lt;/a>.&lt;/p>
&lt;p>An error is returned if the string already exists in the list or if the list is at capacity.&lt;/p>
&lt;h5 id="alphadeletelistvaluekey-value">Alpha().DeleteListValue(key, value)&lt;/h5>
&lt;p>This function removes the specified string value from the List
in &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Lists[key].Values&lt;/code>&lt;/a>.&lt;/p>
&lt;p>An error is returned if the string does not exist in the list.&lt;/p>
&lt;h5 id="alphasetlistcapacitykey-amount">Alpha().SetListCapacity(key, amount)&lt;/h5>
&lt;p>This function sets the maximum capacity for the List at &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Lists[key].Capacity&lt;/code>&lt;/a>.&lt;/p>
&lt;p>The capacity value is required to be between 0 and 1000.&lt;/p>
&lt;h5 id="alphagetlistcapacitykey">Alpha().GetListCapacity(key)&lt;/h5>
&lt;p>This function retrieves either the &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Lists[key].Capacity&lt;/code>&lt;/a> or the SDK
awaiting-batch value for the given key, whichever is most up to date.&lt;/p>
&lt;h5 id="alphagetlistvalueskey">Alpha().GetListValues(key)&lt;/h5>
&lt;p>This function retrieves either the &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServerStatus">&lt;code>GameServer.Status.Lists[key].Values&lt;/code>&lt;/a> or the SDK
awaiting-batch values array for the given key, whichever is most up to date.&lt;/p>
&lt;h5 id="alphalistcontainskey-value">Alpha().ListContains(key, value)&lt;/h5>
&lt;p>Convenience function, which returns if the specific string value exists in the results
of &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphagetlistvalueskey">&lt;code>Alpha().GetListValues(key)&lt;/code>&lt;/a>.&lt;/p>
&lt;h5 id="alphagetlistlengthkey">Alpha().GetListLength(key)&lt;/h5>
&lt;p>Convenience function, which retrieves the length of the results of &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphagetlistvalueskey">&lt;code>Alpha().GetListValues(key)&lt;/code>&lt;/a>.&lt;/p>
&lt;h3 id="player-tracking">Player Tracking&lt;/h3>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>The Player Tracking feature is currently &lt;strong>&lt;a href="http://localhost:1313/docs/guides/feature-stages/#alpha">Alpha&lt;/a>&lt;/strong>,
not enabled by default, and may change in the future.&lt;/p>
&lt;p>Use the FeatureGate &lt;code>PlayerTracking&lt;/code>
to enable and test this feature.&lt;/p>
&lt;p>See the &lt;a href="http://localhost:1313/docs/guides/feature-stages/#feature-gates">Feature Gate documentation&lt;/a> for details on how to enable features.&lt;/p>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;a href="http://localhost:1313/#counters-and-lists">Counters and Lists&lt;/a> will eventually replace the Alpha functionality of Player Tracking, which will subsequently be
removed from Code Blind. If you are currently using this Alpha feature, we would love for you to test (and ideally migrate
to!) this new functionality to ensure it will meet all your needs.
&lt;/div>
&lt;h4 id="alphaplayerconnectplayerid">Alpha().PlayerConnect(playerID)&lt;/h4>
&lt;p>This function increases the SDKâ€™s stored player count by one, and appends this playerID to
&lt;code>GameServer.Status.Players.IDs&lt;/code>.&lt;/p>
&lt;p>&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.PlayerStatus">&lt;code>GameServer.Status.Players.Count&lt;/code> and &lt;code>GameServer.Status.Players.IDs&lt;/code>&lt;/a>
are then set to update the player count and id list a second from now,
unless there is already an update pending, in which case the update joins that batch operation.&lt;/p>
&lt;p>&lt;code>PlayerConnect()&lt;/code> returns true and adds the playerID to the list of playerIDs if this playerID was not already in the
list of connected playerIDs.&lt;/p>
&lt;p>If the playerID exists within the list of connected playerIDs, &lt;code>PlayerConnect()&lt;/code> will return false, and the list of
connected playerIDs will be left unchanged.&lt;/p>
&lt;p>An error will be returned if the playerID was not already in the list of connected playerIDs but the player capacity for
the server has been reached. The playerID will not be added to the list of playerIDs.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Do not use this method if you are manually managing &lt;code>GameServer.Status.Players.IDs&lt;/code> and &lt;code>GameServer.Status.Players.Count&lt;/code>
through the Kubernetes API, as indeterminate results will occur.
&lt;/div>
&lt;h4 id="alphaplayerdisconnectplayerid">Alpha().PlayerDisconnect(playerID)&lt;/h4>
&lt;p>This function decreases the SDKâ€™s stored player count by one, and removes the playerID from
&lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.PlayerStatus">&lt;code>GameServer.Status.Players.IDs&lt;/code>&lt;/a>.&lt;/p>
&lt;p>&lt;code>GameServer.Status.Players.Count&lt;/code> and &lt;code>GameServer.Status.Players.IDs&lt;/code> are then set to
update the player count and id list a second from now,
unless there is already an update pending, in which case the update joins that batch operation.&lt;/p>
&lt;p>&lt;code>PlayerDisconnect()&lt;/code> will return true and remove the supplied playerID from the list of connected playerIDs if the
playerID value exists within the list.&lt;/p>
&lt;p>If the playerID was not in the list of connected playerIDs, the call will return false, and the connected playerID list
will be left unchanged.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Do not use this method if you are manually managing &lt;code>GameServer.Status.Players.IDs&lt;/code> and &lt;code>GameServer.Status.Players.Count&lt;/code>
through the Kubernetes API, as indeterminate results will occur.
&lt;/div>
&lt;h4 id="alphasetplayercapacitycount">Alpha().SetPlayerCapacity(count)&lt;/h4>
&lt;p>Update the &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/#agones.dev/v1.PlayerStatus">&lt;code>GameServer.Status.Players.Capacity&lt;/code>&lt;/a> value with a new capacity.&lt;/p>
&lt;h4 id="alphagetplayercapacity">Alpha().GetPlayerCapacity()&lt;/h4>
&lt;p>This function retrieves the current player capacity. This is always accurate from what has been set through this SDK,
even if the value has yet to be updated on the GameServer status resource.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If &lt;code>GameServer.Status.Players.Capacity&lt;/code> is set manually through the Kubernetes API, use &lt;code>SDK.GameServer()&lt;/code> or
&lt;code>SDK.WatchGameServer()&lt;/code> instead to view this value.
&lt;/div>
&lt;h4 id="alphagetplayercount">Alpha().GetPlayerCount()&lt;/h4>
&lt;p>This function retrieves the current player count.
This is always accurate from what has been set through this SDK, even if the value has yet to be updated on the
GameServer status resource.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If &lt;code>GameServer.Status.Players.IDs&lt;/code> is set manually through the Kubernetes API, use SDK.GameServer()
or SDK.WatchGameServer() instead to retrieve the current player count.
&lt;/div>
&lt;h4 id="alphaisplayerconnectedplayerid">Alpha().IsPlayerConnected(playerID)&lt;/h4>
&lt;p>This function returns if the playerID is currently connected to the GameServer. This is always accurate from what has
been set through this SDK,
even if the value has yet to be updated on the GameServer status resource.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If &lt;code>GameServer.Status.Players.IDs&lt;/code> is set manually through the Kubernetes API, use SDK.GameServer()
or SDK.WatchGameServer() instead to determine connected status.
&lt;/div>
&lt;h4 id="alphagetconnectedplayers">Alpha().GetConnectedPlayers()&lt;/h4>
&lt;p>This function returns the list of the currently connected player ids. This is always accurate from what has been set
through this SDK, even if the value has yet to be updated on the GameServer status resource.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If &lt;code>GameServer.Status.Players.IDs&lt;/code> is set manually through the Kubernetes API, use SDK.GameServer()
or SDK.WatchGameServer() instead to list the connected players.
&lt;/div>
&lt;h2 id="writing-your-own-sdk">Writing your own SDK&lt;/h2>
&lt;p>If there isn&amp;rsquo;t an SDK for the language and platform you are looking for, you have several options:&lt;/p>
&lt;h3 id="grpc-client-generation">gRPC Client Generation&lt;/h3>
&lt;p>If client generation is well supported by &lt;a href="https://grpc.io/docs/">gRPC&lt;/a>, then generate client(s) from
the proto files found in the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>&lt;code>proto/sdk&lt;/code>&lt;/a>,
directory and look at the current
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>sdks&lt;/a> to see how the wrappers are
implemented to make interaction with the SDK server simpler for the user.&lt;/p>
&lt;h3 id="rest-api-implementation">REST API Implementation&lt;/h3>
&lt;p>If client generation is not well supported by gRPC, or if there are other complicating factors, implement the SDK through
the &lt;a href="http://localhost:1313/docs/guides/client-sdks/rest/">REST&lt;/a> HTTP+JSON interface. This could be written by hand, or potentially generated from
the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>Swagger/OpenAPI Specifications&lt;/a>.&lt;/p>
&lt;p>Finally, if you build something that would be usable by the community, please submit a pull request!&lt;/p>
&lt;h2 id="sdk-conformance-test">SDK Conformance Test&lt;/h2>
&lt;p>There is a tool &lt;code>SDK server Conformance&lt;/code> checker which will run Local SDK server and record all requests your client is performing.&lt;/p>
&lt;p>In order to check that SDK is working properly you should write simple SDK test client which would use all methods of your SDK.&lt;/p>
&lt;p>Also to test that SDK client is receiving valid Gameserver data, your binary should set the same &lt;code>Label&lt;/code> value as creation timestamp which you will receive as a result of GameServer() call and &lt;code>Annotation&lt;/code> value same as gameserver UID received by Watch gameserver callback.&lt;/p>
&lt;p>Complete list of endpoints which should be called by your test client is the following:&lt;/p>
&lt;pre tabindex="0">&lt;code>ready,allocate,setlabel,setannotation,gameserver,health,shutdown,watch
&lt;/code>&lt;/pre>&lt;p>In order to run this test SDK server locally use:&lt;/p>
&lt;pre tabindex="0">&lt;code>SECONDS=30 make run-sdk-conformance-local
&lt;/code>&lt;/pre>&lt;p>Docker container would timeout in 30 seconds and give your the comparison of received requests and expected requests&lt;/p>
&lt;p>For instance you could run Go SDK conformance test and see how the process goes:&lt;/p>
&lt;pre tabindex="0">&lt;code>SDK_FOLDER=go make run-sdk-conformance-test
&lt;/code>&lt;/pre>&lt;p>In order to add test client for your SDK, write &lt;code>sdktest.sh&lt;/code> and &lt;code>Dockerfile&lt;/code>. Refer to
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>Golang SDK Conformance testing directory structure&lt;/a>.&lt;/p>
&lt;h2 id="building-the-tools">Building the Tools&lt;/h2>
&lt;p>If you wish to build the binaries from source
the &lt;code>make&lt;/code> target &lt;code>build-agones-sdk-binary&lt;/code> will compile the necessary binaries
for all supported operating systems (64 bit windows, linux and osx).&lt;/p>
&lt;p>You can find the binaries in the &lt;code>bin&lt;/code> folder in
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>`cmd/sdk-server`&lt;/a>
once compilation is complete.&lt;/p>
&lt;p>See
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Developing, Testing and Building Code Blind&lt;/a> for more details.&lt;/p></description></item><item><title>Docs: Windows Gameservers</title><link>http://localhost:1313/docs/guides/windows-gameservers/</link><pubDate>Mon, 19 Apr 2021 21:14:19 +0000</pubDate><guid>http://localhost:1313/docs/guides/windows-gameservers/</guid><description>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
Running &lt;code>GameServers&lt;/code> on Windows nodes is currently Alpha, and any feedback
would be appreciated.
&lt;/div>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>The following prerequisites are required to create a GameServer:&lt;/p>
&lt;ol>
&lt;li>A Kubernetes cluster with the UDP port range 7000-8000 open on each node.&lt;/li>
&lt;li>Code Blind controller installed in the targeted cluster&lt;/li>
&lt;li>kubectl properly configured&lt;/li>
&lt;li>Netcat which is already installed on most Linux/macOS distributions, for windows you can use &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">WSL&lt;/a>.&lt;/li>
&lt;/ol>
&lt;p>If you donâ€™t have a Kubernetes cluster you can follow &lt;a href="http://localhost:1313/docs/installation/">these instructions&lt;/a> to create a cluster on Google Kubernetes Engine (GKE), Minikube or Azure Kubernetes Service (AKS), and install Code Blind.&lt;/p>
&lt;p>For the purpose of this guide weâ€™re going to use the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/examples/simple-game-server/" target="_blank" data-proofer-ignore>simple-game-server&lt;/a>
example as the GameServer container. This example is a very simple UDP server written in Go. Donâ€™t hesitate to look at the code of this example for more information.&lt;/p>
&lt;p>Ensure that you have some nodes to your cluster that are running Windows.&lt;/p>
&lt;h2 id="objectives">Objectives&lt;/h2>
&lt;ul>
&lt;li>Create a GameServer on a Windows node.&lt;/li>
&lt;li>Connect to the GameServer.&lt;/li>
&lt;/ul>
&lt;h3 id="1-create-a-gameserver">1. Create a GameServer&lt;/h3>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Starting with version 0.3, the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>simple-game-server&lt;/a> example is compiled as a multi-arch docker image that will run on both Linux and Windows. To ensure that the game server runs on a Windows node, a nodeSelector of &lt;code>&amp;quot;kubernetes.io/os&amp;quot;: windows&lt;/code> must be added to the game server specification.
&lt;/div>
&lt;p>Create a GameServer using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl create -f https://raw.githubusercontent.com/googleforgames/agones/release-1.38.0/examples/simple-game-server/gameserver-windows.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see a successful output similar to this:&lt;/p>
&lt;pre tabindex="0">&lt;code>gameserver.agones.dev/simple-game-server-4ss4j created
&lt;/code>&lt;/pre>&lt;p>Verify that the GameServer becomes Ready by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get gameservers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It should look something like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>NAME STATE ADDRESS PORT NODE AGE
simple-game-server-7pjrq Ready 35.233.183.43 7190 agones 3m
&lt;/code>&lt;/pre>&lt;p>Take a note of the Game Server IP address and ports.&lt;/p>
&lt;p>For the full details of the YAML file head to the &lt;a href="http://localhost:1313/docs/reference/gameserver/">GameServer Specification Guide&lt;/a>&lt;/p>
&lt;h3 id="2-connect-to-the-gameserver">2. Connect to the GameServer&lt;/h3>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If you have Code Blind installed on Google Kubernetes Engine, and are using
Cloud Shell for your terminal, UDP is blocked. For this step, we recommend
SSH&amp;rsquo;ing into a running VM in your project, such as a Kubernetes node.
You can click the &amp;lsquo;SSH&amp;rsquo; button on the &lt;a href="https://console.cloud.google.com/compute/instances">Google Compute Engine Instances&lt;/a>
page to do this.
Run &lt;code>toolbox&lt;/code> on GKE Node to run docker container with tools and then &lt;code>nc&lt;/code> command would be available.
&lt;/div>
&lt;p>You can now communicate with the Game Server:&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>If you do not have netcat installed
(i.e. you get a response of &lt;code>nc: command not found&lt;/code>),
you can install netcat by running &lt;code>sudo apt install netcat&lt;/code>.&lt;/p>
&lt;p>If you are on Windows, you can alternatively install netcat on
&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">WSL&lt;/a>,
or download a version of netcat for Windows from &lt;a href="https://nmap.org/ncat/">nmap.org&lt;/a>.&lt;/p>
&lt;/div>
&lt;pre tabindex="0">&lt;code>nc -u {IP} {PORT}
Hello World !
ACK: Hello World !
EXIT
&lt;/code>&lt;/pre>&lt;p>You can finally type &lt;code>EXIT&lt;/code> which tells the SDK to run the &lt;a href="http://localhost:1313/docs/guides/client-sdks/#shutdown">Shutdown command&lt;/a>, and therefore shuts down the &lt;code>GameServer&lt;/code>.&lt;/p>
&lt;p>If you run &lt;code>kubectl describe gameserver&lt;/code> again - either the GameServer will be gone completely, or it will be in &lt;code>Shutdown&lt;/code> state, on the way to being deleted.&lt;/p>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;ul>
&lt;li>Make a local copy of the simple-game-server
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>fleet configuration&lt;/a>,
modify it to include a node selector, and use it to go through the &lt;a href="http://localhost:1313/docs/getting-started/create-fleet/">Quickstart: Create a Game Server Fleet&lt;/a>.&lt;/li>
&lt;li>If you want to use your own GameServer container make sure you have properly integrated the &lt;a href="http://localhost:1313/docs/guides/client-sdks/">Code Blind SDK&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Fleet Updates</title><link>http://localhost:1313/docs/guides/fleet-updates/</link><pubDate>Tue, 27 Aug 2019 03:58:19 +0000</pubDate><guid>http://localhost:1313/docs/guides/fleet-updates/</guid><description>
&lt;h2 id="rolling-update-strategy">Rolling Update Strategy&lt;/h2>
&lt;p>When Fleets are edited and updated, the default strategy of Code Blind is to roll the new version of the &lt;code>GameServer&lt;/code>
out to the entire &lt;code>Fleet&lt;/code>, in a step by step increment and decrement by adding a chunk of the new version and removing
a chunk of the current set of &lt;code>GameServers&lt;/code>.&lt;/p>
&lt;p>This is done while ensuring that &lt;code>Allocated&lt;/code> &lt;code>GameServers&lt;/code> are not deleted
until they are specifically shutdown through the game servers SDK, as they are expected to have players on them.&lt;/p>
&lt;p>You can see this in the &lt;code>Fleet.Spec.Strategy&lt;/code> &lt;a href="http://localhost:1313/docs/reference/fleet/">reference&lt;/a>, with controls for how
much of the &lt;code>Fleet&lt;/code> is incremented and decremented at one time:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">strategy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">RollingUpdate&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rollingUpdate&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">maxSurge&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">25&lt;/span>&lt;span style="color:#000">%&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">maxUnavailable&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">25&lt;/span>&lt;span style="color:#000">%&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So when a Fleet is edited (any field other than &lt;code>replicas&lt;/code>, see note below), either through &lt;code>kubectl&lt;/code> &lt;code>edit&lt;/code>/&lt;code>apply&lt;/code> or via the Kubernetes API, this performs the following operations:&lt;/p>
&lt;ol>
&lt;li>Adds the &lt;code>maxSurge&lt;/code> number of &lt;code>GameServers&lt;/code> to the Fleet.&lt;/li>
&lt;li>Shutdown the &lt;code>maxUnavailable&lt;/code> number of &lt;code>GameServers&lt;/code> in the Fleet, skipping &lt;code>Allocated&lt;/code> &lt;code>GameServers&lt;/code>.&lt;/li>
&lt;li>Repeat above steps until all the previous &lt;code>GameServer&lt;/code> configurations have been &lt;code>Shutdown&lt;/code> and deleted.&lt;/li>
&lt;/ol>
&lt;p>By default, a Fleet will wait for new &lt;code>GameSevers&lt;/code> to become &lt;code>Ready&lt;/code> during a Rolling Update before continuing to shutdown additional &lt;code>GameServers&lt;/code>, only counting &lt;code>GameServers&lt;/code> that are &lt;code>Ready&lt;/code> as being available when calculating the current &lt;code>maxUnavailable&lt;/code> value which controls the rate at which &lt;code>GameServers&lt;/code> are updated.
This ensures that a Fleet cannot accidentally have zero &lt;code>GameServers&lt;/code> in the &lt;code>Ready&lt;/code> state if something goes wrong during a Rolling Update or if &lt;code>GameServers&lt;/code> have a long delay before moving to the &lt;code>Ready&lt;/code> state.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>When &lt;code>Fleet&lt;/code> update contains only changes to the &lt;code>replicas&lt;/code> parameter, then new GameServers will be created/deleted straight away,
which means in that case &lt;code>maxSurge&lt;/code> and &lt;code>maxUnavailable&lt;/code> parameters for a RollingUpdate will not be used.
The RollingUpdate strategy takes place when you update &lt;code>spec&lt;/code> parameters other than &lt;code>replicas&lt;/code>.&lt;/p>
&lt;p>If you are using a Fleet which is scaled by a FleetAutoscaler, &lt;a href="http://localhost:1313/docs/getting-started/create-fleetautoscaler/#7-change-autoscaling-parameters">read the Fleetautoscaler guide&lt;/a> for more details on how RollingUpdates with FleetAutoscalers need to be implemented.&lt;/p>
&lt;p>You could also check the behaviour of the Fleet with a RollingUpdate strategy on a test &lt;code>Fleet&lt;/code> to preview your upcoming updates.
Use &lt;code>kubectl describe fleet&lt;/code> to track scaling events in a Fleet.&lt;/p>
&lt;/div>
&lt;h2 id="recreate-strategy">Recreate Strategy&lt;/h2>
&lt;p>This is an optimal &lt;code>Fleet&lt;/code> update strategy if you want to replace all &lt;code>GameServers&lt;/code> that are not &lt;code>Allocated&lt;/code>
with a new version as quickly as possible.&lt;/p>
&lt;p>You can see this in the &lt;code>Fleet.Spec.Strategy&lt;/code> &lt;a href="http://localhost:1313/docs/reference/fleet/">reference&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">strategy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Recreate&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So when a Fleet is edited, either through &lt;code>kubectl&lt;/code> &lt;code>edit&lt;/code>/&lt;code>apply&lt;/code> or via the Kubernetes API, this performs the following operations:&lt;/p>
&lt;ol>
&lt;li>&lt;code>Shutdown&lt;/code> all &lt;code>GameServers&lt;/code> in the Fleet that are not currently &lt;code>Allocated&lt;/code>.&lt;/li>
&lt;li>Create the same number of the new version of the &lt;code>GameServers&lt;/code> that were previously deleted.&lt;/li>
&lt;li>Repeat above steps until all the previous &lt;code>GameServer&lt;/code> configurations have been &lt;code>Shutdown&lt;/code> and deleted.&lt;/li>
&lt;/ol>
&lt;h2 id="two-or-more-fleets-strategy">Two (or more) Fleets Strategy&lt;/h2>
&lt;p>If you want very fine-grained control over the rate that new versions of a &lt;code>GameServer&lt;/code> configuration is rolled out, or
if you want to do some version of A/B testing or smoke test between different versions, running two (or more) &lt;code>Fleets&lt;/code> at the same time is a
good solution for this.&lt;/p>
&lt;p>To do this, create a second &lt;code>Fleet&lt;/code> inside your cluster, starting with zero replicas. From there you can scale this newer &lt;code>Fleet&lt;/code>
up and the older &lt;code>Fleet&lt;/code> down as required by your specific rollout strategy.&lt;/p>
&lt;p>This also allows you to rollback if issues arise with the newer version, as you can delete the newer &lt;code>Fleet&lt;/code>
and scale up the old Fleet to its previous levels, resulting in minimal impact to the players.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
For GameServerAllocation, you will need to have at least a single shared label between the &lt;code>GameServers&lt;/code> in each
Fleet.
&lt;/div>
&lt;h3 id="gameserverallocation-across-fleets">GameServerAllocation Across Fleets&lt;/h3>
&lt;p>Since &lt;code>GameServerAllocation&lt;/code> is powered by label selectors, it is possible to allocate across multiple fleets, and/or
give preference to particular sets of &lt;code>GameServers&lt;/code> over others. You can see details of this in
the &lt;code>GameServerAllocation&lt;/code> &lt;a href="http://localhost:1313/docs/reference/gameserverallocation/">reference&lt;/a>.&lt;/p>
&lt;p>In a scenario where a new &lt;code>v2&lt;/code> version of a &lt;code>Fleet&lt;/code> is being slowly scaled up in a separate Fleet from the previous &lt;code>v1&lt;/code>
Fleet, we can specify that we &lt;code>prefer&lt;/code> allocation to occur from the &lt;code>v2&lt;/code> Fleet, and if none are available, fallback to
the &lt;code>v1&lt;/code> Fleet, like so:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-5" role="tablist">
&lt;li class="nav-item">
&lt;button class="nav-link active"
id="tabs-05-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-05-00" role="tab"
data-td-tp-persist="yaml" aria-controls="tabs-05-00" aria-selected="true">
selectors
&lt;/button>
&lt;/li>&lt;li class="nav-item">
&lt;button class="nav-link"
id="tabs-05-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-05-01" role="tab"
aria-controls="tabs-05-01" aria-selected="false">
required &amp;amp; preferred (deprecated)
&lt;/button>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-5-content">
&lt;div class="tab-pane fade show active"
id="tabs-05-00" role="tabpanel" aria-labelled-by="tabs-05-00-tab" tabindex="5">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;allocation.agones.dev/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GameServerAllocation&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selectors&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">matchLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">agones.dev/fleet&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">matchLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">game&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-awesome-game&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-05-01" role="tabpanel" aria-labelled-by="tabs-05-01-tab" tabindex="5">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;allocation.agones.dev/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GameServerAllocation&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Deprecated, use field selectors instead.&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">required&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">matchLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">game&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-awesome-game&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Deprecated, use field selectors instead.&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">preferred&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">matchLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">agones.dev/fleet&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>In this example, all &lt;code>GameServers&lt;/code> have the label &lt;code>game: my-awesome-game&lt;/code>, so the Allocation will search across both
Fleets through that mechanism. The &lt;code>selectors&lt;/code> label matching selector tells the allocation system to first search
all &lt;code>GameServers&lt;/code> with the &lt;code>v2&lt;/code> &lt;code>Fleet&lt;/code> label, and if not found, search through the rest of the set.&lt;/p>
&lt;p>The above &lt;code>GameServerAllocation&lt;/code> can then be used while you scale up the &lt;code>v2&lt;/code> Fleet and scale down the original Fleet at
the rate that you deem fit for your specific rollout.&lt;/p>
&lt;h2 id="notifying-gameservers-on-fleet-updatedownscale">Notifying GameServers on Fleet Update/Downscale&lt;/h2>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>The Allocated GameSever Overflow Notification feature is currently &lt;strong>&lt;a href="http://localhost:1313/docs/guides/feature-stages/#beta">Beta&lt;/a>&lt;/strong>,
and while it is enabled by default it may change in the future.&lt;/p>
&lt;p>Use the Feature Gate &lt;code>FleetAllocationOverflow&lt;/code> to disable this feature.&lt;/p>
&lt;p>See the &lt;a href="http://localhost:1313/docs/guides/feature-stages/#feature-gates">Feature Gate documentation&lt;/a> for details on how to disable features.&lt;/p>
&lt;/div>
&lt;p>When &lt;code>Allocated&lt;/code> &lt;code>GameServers&lt;/code> are utilised for a long time, such as a Lobby &lt;code>GameServer&lt;/code>,
or a &lt;code>GameServer&lt;/code> that is being reused multiple times in a row, it can be useful
to notify an &lt;code>Allocated&lt;/code> &lt;code>GameServer&lt;/code> process when its backing Fleet has been updated.
When an update occurs, the &lt;code>Allocated&lt;/code> &lt;code>GameServer&lt;/code>, may want to actively perform a graceful shutdown and release its
resources such that it can be replaced by a new version, or similar actions.&lt;/p>
&lt;p>To do this, we provide the ability to apply a user-provided set of labels and/or annotations to the &lt;code>Allocated&lt;/code>
&lt;code>GameServers&lt;/code> when a &lt;code>Fleet&lt;/code> update occurs that updates its &lt;code>GameServer&lt;/code> template, or generally
causes the &lt;code>Fleet&lt;/code> replica count to drop below the number of currently &lt;code>Allocated&lt;/code> &lt;code>GameServers&lt;/code>.&lt;/p>
&lt;p>This provides two useful capabilities:&lt;/p>
&lt;ol>
&lt;li>The &lt;code>GameServer&lt;/code> &lt;a href="http://localhost:1313/docs/guides/client-sdks/#watchgameserverfunctiongameserver">&lt;code>SDK.WatchGameServer()&lt;/code>&lt;/a>
command can be utilised to react to this annotation and/or label change to
indicate the Fleet system change, and the game server binary could execute code accordingly.&lt;/li>
&lt;li>This can also be used to proactively update &lt;code>GameServer&lt;/code> labels, to effect change in allocation strategy - such as
preferring the newer &lt;code>GameServers&lt;/code> when allocating, but falling back to the older version if there aren&amp;rsquo;t enough
of the new ones yet spun up.&lt;/li>
&lt;/ol>
&lt;p>The labels and/or annotations are applied to &lt;code>GameServers&lt;/code> in a &lt;code>Fleet&lt;/code> in the order designated by their configured &lt;a href="http://localhost:1313/docs/advanced/scheduling-and-autoscaling/#fleet-scheduling">Fleet scheduling&lt;/a>.&lt;/p>
&lt;p>Example yaml configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;agones.dev/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Fleet&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">simple-game-server&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">replicas&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">allocationOverflow&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># This specifies which annotations and/or labels are applied&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">mykey&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">myvalue&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># empty an existing label value, so it&amp;#39;s no longer in the allocation selection&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">event&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">overflow&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">template&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containerPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">7654&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">template&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">simple-game-server&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">us-docker.pkg.dev/agones-images/examples/simple-game-server:0.27&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See the &lt;a href="http://localhost:1313/docs/reference/fleet/">Fleet reference&lt;/a> for more details.&lt;/p>
&lt;!-- This is the only way I could get the alert to work in a feature code -->
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This works the same across Fleet resizing and Rolling/Recreate Updates, in that the implementation responds to the
underlying &lt;code>GameServerSet&lt;/code>&amp;rsquo;s replicas being shrunk to a value smaller than the number of &lt;code>Allocated&lt;/code>
&lt;code>GameServers&lt;/code> it controls. Therefore, this functionality works equally well with a rolling update as it does with an
update strategy that requires at least two &lt;code>Fleets&lt;/code>.
&lt;/div></description></item><item><title>Docs: GameServer Health Checking</title><link>http://localhost:1313/docs/guides/health-checking/</link><pubDate>Thu, 03 Jan 2019 01:20:19 +0000</pubDate><guid>http://localhost:1313/docs/guides/health-checking/</guid><description>
&lt;h2 id="disabling-health-checking">Disabling Health Checking&lt;/h2>
&lt;p>By default, health checking is enabled, but it can be turned off by setting the &lt;code>spec.health.disabled&lt;/code> property to
true.&lt;/p>
&lt;h2 id="sdk-api">SDK API&lt;/h2>
&lt;p>The &lt;code>Health()&lt;/code> function on the &lt;a href="http://localhost:1313/docs/guides/client-sdks/">SDK object&lt;/a> needs to be called at an
interval less than the &lt;code>spec.health.periodSeconds&lt;/code>
threshold time to be considered before it will be considered a &lt;code>failure&lt;/code>.&lt;/p>
&lt;p>The health check will also need to have not been called a consecutive number of times (&lt;code>spec.health.failureThreshold&lt;/code>),
giving it a chance to heal if it there is an issue.&lt;/p>
&lt;h2 id="health-failure-strategy">Health Failure Strategy&lt;/h2>
&lt;p>The following is the process for what happens to a &lt;code>GameServer&lt;/code> when it is unhealthy.&lt;/p>
&lt;ol>
&lt;li>If the &lt;code>GameServer&lt;/code> container exits with an error before the &lt;code>GameServer&lt;/code> moves to &lt;code>Ready&lt;/code> then,
it is restarted as per the &lt;code>restartPolicy&lt;/code> (which defaults to &amp;ldquo;Always&amp;rdquo;).&lt;/li>
&lt;li>If the &lt;code>GameServer&lt;/code> fails health checking at any point, then it doesn&amp;rsquo;t restart,
but moves to an &lt;code>Unhealthy&lt;/code> state.&lt;/li>
&lt;li>If the &lt;code>GameServer&lt;/code> container exits while in &lt;code>Ready&lt;/code>, &lt;code>Allocated&lt;/code> or &lt;code>Reserved&lt;/code> state, it will be restarted
as per the &lt;code>restartPolicy&lt;/code> (which defaults to &amp;ldquo;Always&amp;rdquo;, since &lt;code>RestartPolicy&lt;/code> is a &lt;code>Pod&lt;/code> wide setting),
but will immediately move to an &lt;code>Unhealthy&lt;/code> state.&lt;/li>
&lt;li>If the SDK sidecar fails, then it will be restarted, assuming the &lt;code>RestartPolicy&lt;/code> is Always/OnFailure.&lt;/li>
&lt;/ol>
&lt;h2 id="fleet-management-of-unhealthy-gameservers">Fleet Management of Unhealthy GameServers&lt;/h2>
&lt;p>If a &lt;code>GameServer&lt;/code> moves into an &lt;code>Unhealthy&lt;/code> state when it is not part of a Fleet, the &lt;code>GameServer&lt;/code> will remain in the
Unhealthy state until explicitly deleted. This is useful for debugging &lt;code>Unhealthy&lt;/code> &lt;code>GameServers&lt;/code>, or if you are
creating your own &lt;code>GameServer&lt;/code> management layer, you can explicitly choose what to do if a &lt;code>GameServer&lt;/code> becomes
&lt;code>Unhealthy&lt;/code>.&lt;/p>
&lt;p>If a &lt;code>GameServer&lt;/code> is part of a &lt;code>Fleet&lt;/code>, the &lt;code>Fleet&lt;/code> management system will &lt;em>delete&lt;/em> any &lt;code>Unhealthy&lt;/code> &lt;code>GameServers&lt;/code> and
immediately replace them with a brand new &lt;code>GameServer&lt;/code> to ensure it has the configured number of Replicas.&lt;/p>
&lt;h2 id="configuration-reference">Configuration Reference&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Health checking for the running game server&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">health&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Disable health checking. defaults to false, but can be set to true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">disabled&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Number of seconds after the container has started before health check is initiated. Defaults to 5 seconds&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">initialDelaySeconds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># If the `Health()` function doesn&amp;#39;t get called at least once every period (seconds), then&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># the game server is not healthy. Defaults to 5&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">periodSeconds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Minimum consecutive failures for the health probe to be considered failed after having succeeded.&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Defaults to 3. Minimum value is 1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">failureThreshold&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>full GameServer example&lt;/a> for more details&lt;/p>
&lt;h2 id="example">Example&lt;/h2>
&lt;h3 id="c">C++&lt;/h3>
&lt;p>For a configuration that requires a health ping every 5 seconds, the example below sends a request every 2 seconds
to be sure that the GameServer is under the threshold.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">doHealth&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">agones&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">SDK&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">sdk&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87">true&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">sdk&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span>&lt;span style="color:#000">Health&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">std&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">cout&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Health ping failed&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#000">std&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">endl&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">std&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">cout&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Health ping sent&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#000">std&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">endl&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">std&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">this_thread&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">sleep_for&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">std&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">chrono&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">seconds&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">agones&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">SDK&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">sdk&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">agones&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">SDK&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">bool&lt;/span> &lt;span style="color:#000">connected&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sdk&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span>&lt;span style="color:#000">Connect&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">connected&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">std&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#204a87;font-weight:bold">thread&lt;/span> &lt;span style="color:#000">health&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">doHealth&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sdk&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// ... run the game server code
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="full-game-server">Full Game Server&lt;/h3>
&lt;p>Also look in the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore>examples&lt;/a> directory.&lt;/p></description></item><item><title>Docs: Player Tracking</title><link>http://localhost:1313/docs/guides/player-tracking/</link><pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate><guid>http://localhost:1313/docs/guides/player-tracking/</guid><description>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>The Player Tracking feature is currently &lt;strong>&lt;a href="http://localhost:1313/docs/guides/feature-stages/#alpha">Alpha&lt;/a>&lt;/strong>,
not enabled by default, and may change in the future.&lt;/p>
&lt;p>Use the FeatureGate &lt;code>PlayerTracking&lt;/code>
to enable and test this feature.&lt;/p>
&lt;p>See the &lt;a href="http://localhost:1313/docs/guides/feature-stages/#feature-gates">Feature Gate documentation&lt;/a> for details on how to enable features.&lt;/p>
&lt;/div>
&lt;h2 id="managing-gameserver-capacities">Managing GameServer Capacities&lt;/h2>
&lt;p>To track your &lt;code>GameServer&lt;/code> current player capacity, Code Blind gives you the ability to both set an initial capacity at
&lt;code>GameServer&lt;/code> creation, as well be able to change it during the lifecycle of the &lt;code>GameServer&lt;/code> through the Code Blind SDK.&lt;/p>
&lt;p>To set the initial capacity, you can do so via &lt;code>GameServer.Spec.Players.InitialCapacity&lt;/code> like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;agones.dev/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GameServer&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;gs-example&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">players&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># set this GameServer&amp;#39;s initial player capacity to 10&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">initialCapacity&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From there, if you need to change the capacity of the GameSever as gameplay is in progress, you can also do so via
&lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphasetplayercapacitycount">&lt;code>SDK.Alpha().SetPlayerCapacity(count)&lt;/code>&lt;/a>&lt;/p>
&lt;p>The current player capacity is represented in &lt;code>GameServer.Status.Players.Capacity&lt;/code> resource value.&lt;/p>
&lt;p>We can see this in action, when we look at the Status section of a GameServer resource
, wherein the capacity has been set to 20:&lt;/p>
&lt;pre tabindex="0">&lt;code>...
Status:
Address: 14.81.195.72
Node Name: gke-test-cluster-default-6cd0ba67-1mps
Players:
Capacity: 20
Count: 0
Ids: &amp;lt;nil&amp;gt;
Ports:
Name: gameport
Port: 7983
Reserved Until: &amp;lt;nil&amp;gt;
State: Ready
&lt;/code>&lt;/pre>&lt;p>From the SDK, the game server binary can also retrieve the current player capacity
via &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphagetplayercapacity">&lt;code>SDK.Alpha().GetPlayerCapacity()&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>Changing the capacity value here has no impact on players actually
connected to or trying to connect to your server, as that is not a responsibility of Code Blind.&lt;/p>
&lt;p>This functionality is for tracking purposes only.&lt;/p>
&lt;/div>
&lt;h2 id="connecting-and-disconnecting-players">Connecting and Disconnecting Players&lt;/h2>
&lt;p>As players connect and disconnect from your game, the Player Tracking functions enable you to track which players
are currently connected.&lt;/p>
&lt;p>It assumed that each player that connects has a unique token that identifies them as a player.&lt;/p>
&lt;p>When a player connects to the game server binary,
calling &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphaplayerconnectplayerid">&lt;code>SDK.Alpha().PlayerConnect(playerID)&lt;/code>&lt;/a>
with the unique player token will register them as connected, and store their player id.&lt;/p>
&lt;p>At disconnection time,
call &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphaplayerdisconnectplayerid">&lt;code>SDK.Alpha().PlayerDisconnect(playerID)&lt;/code>&lt;/a>
, which will deregister them and remove their player id from the list.&lt;/p>
&lt;p>Each of these &lt;code>playerIDs&lt;/code> is stored on &lt;code>GameServer.Status.Players.IDs&lt;/code>, and the current count of connected players
can be seen in &lt;code>GameServer.Status.Players.Count&lt;/code>.&lt;/p>
&lt;p>You can see this in action below in the &lt;code>GameServer&lt;/code> Status section, where there are 4 players connected:&lt;/p>
&lt;pre tabindex="0">&lt;code>...
Status:
Address: 39.82.196.74
Node Name: gke-test-cluster-default-6cd0ba77-1mps
Players:
Capacity: 10
Count: 4
Ids:
xy8a
m0ux
71nj
lpq5
Ports:
Name: gameport
Port: 7166
Reserved Until: &amp;lt;nil&amp;gt;
State: Ready
&lt;/code>&lt;/pre>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>Calling &lt;code>PlayerConnect&lt;/code> or &lt;code>PlayerDisconnect&lt;/code> functions will not
connect or disconnect players, as that is not under the control of Code Blind.&lt;/p>
&lt;p>This functionality is for tracking purposes only.&lt;/p>
&lt;/div>
&lt;h2 id="checking-player-data">Checking Player Data&lt;/h2>
&lt;p>Not only is the connected player data stored on the &lt;code>GameServer&lt;/code> resource, it is also stored in memory within the
SDK, so that it can be used from within the game server binary as a realtime, thread safe, registry of connected
players.&lt;/p>
&lt;p>Therefore, if you want to:&lt;/p>
&lt;ul>
&lt;li>Get the current player count, call &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphagetplayercount">&lt;code>SDK.Alpha().GetPlayerCount()&lt;/code>&lt;/a>&lt;/li>
&lt;li>Check if a specific player is connected, call &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphaisplayerconnectedplayerid">&lt;code>SDK.Alpha().IsPlayerConnected(playerID)&lt;/code>&lt;/a>&lt;/li>
&lt;li>Retrieve the full list of connected players, call &lt;a href="http://localhost:1313/docs/guides/client-sdks/#alphagetconnectedplayers">&lt;code>SDK.Alpha().GetConnectedPlayers()&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;ul>
&lt;li>Review the &lt;a href="http://localhost:1313/docs/guides/client-sdks/#player-tracking">Player Tracking SDK Reference&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Local Game Server</title><link>http://localhost:1313/docs/guides/local-game-server/</link><pubDate>Tue, 19 Feb 2019 08:00:00 +0000</pubDate><guid>http://localhost:1313/docs/guides/local-game-server/</guid><description>
&lt;p>You can register a local game server with Code Blind. This means you can run an experimental build of your game server in the Code Blind environment without the need of packaging and deploying it to a fleet. This allows you to quickly iterate on your game server code while still being able to plugin to your Code Blind environment.&lt;/p>
&lt;h2 id="register-your-server-with-code-blind">Register your server with Code Blind&lt;/h2>
&lt;p>To register your local game server you&amp;rsquo;ll need to know the IP address of the machine running it and the port. With that you&amp;rsquo;ll create a game server config like the one below.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;agones.dev/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GameServer&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my-local-server&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Causes Code Blind to register your local game server at 192.1.1.2, replace with your server&amp;#39;s IP address.&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">agones.dev/dev-address&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;192.1.1.2&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">portPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Static&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">17654&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containerPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">17654&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># The following is ignored but required due to validation.&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">template&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">simple-game-server&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">us-docker.pkg.dev/codeblind/examples/simple-server:0.27&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you save this to a file make sure you have &lt;code>kubectl&lt;/code> configured to point to your Code Blind cluster and then run &lt;code>kubectl apply -f dev-gameserver.yaml&lt;/code>. This will register your server with Code Blind.&lt;/p>
&lt;p>Local Game Servers has a few limitations:&lt;/p>
&lt;ul>
&lt;li>PortPolicy must be &lt;code>Static&lt;/code>.&lt;/li>
&lt;li>The game server is not managed by Code Blind. Features like autoscaling, replication, etc are not available.&lt;/li>
&lt;/ul>
&lt;p>When you are finished working with your server, you can remove the registration with &lt;code>kubectl delete -f dev-gameserver.yaml&lt;/code>&lt;/p>
&lt;h2 id="next-steps">Next Steps:&lt;/h2>
&lt;ul>
&lt;li>Review the specification of &lt;a href="http://localhost:1313/docs/reference/gameserver/">GameServer&lt;/a>.&lt;/li>
&lt;li>Read about &lt;code>GameServer&lt;/code> allocation.
&lt;ul>
&lt;li>Review the flow of how &lt;a href="http://localhost:1313/docs/integration-patterns/allocation-from-fleet/">allocation&lt;/a> is done.&lt;/li>
&lt;li>Review the specification of &lt;a href="http://localhost:1313/docs/reference/gameserverallocation/">GameServerAllocation&lt;/a>.&lt;/li>
&lt;li>Check out the &lt;a href="http://localhost:1313/docs/advanced/allocator-service/">Allocator Service&lt;/a> as a richer alternative to &lt;code>GameServerAllocation&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Learn how to connect your local development game server binary into a running Code Blind Kubernetes cluster for even more live development options with an &lt;a href="http://localhost:1313/docs/advanced/out-of-cluster-dev-server/">out of cluster dev server&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Latency Testing with Multiple Clusters</title><link>http://localhost:1313/docs/guides/ping-service/</link><pubDate>Thu, 03 Jan 2019 01:20:30 +0000</pubDate><guid>http://localhost:1313/docs/guides/ping-service/</guid><description>
&lt;p>To make latency testing easier, Code Blind installs with a simple ping service with both HTTP and UDP services that can be called
for the purpose of timing how long the roundtrip takes for information to be returned from either of these services.&lt;/p>
&lt;h2 id="installing">Installing&lt;/h2>
&lt;p>By default, Code Blind installs &lt;a href="https://kubernetes.io/docs/concepts/services-networking/service/">Kubernetes Services&lt;/a> for
both HTTP and the UDP ping endpoints. These can be disabled entirely,
or disabled individually. See the &lt;a href="http://localhost:1313/docs/installation/install-agones/helm/">Helm install guide&lt;/a> for the parameters to
pass through,
as well as configuration options.&lt;/p>
&lt;p>The ping services as all installed under the &lt;code>agones-system&lt;/code> namespace.&lt;/p>
&lt;h2 id="http-service">HTTP Service&lt;/h2>
&lt;p>This exposes an endpoint that returns a simple text HTTP response on request to the root &amp;ldquo;/&amp;rdquo; path. By default this is &lt;code>ok&lt;/code>, but
it can be configured via the &lt;code>agones.ping.http.response&lt;/code> parameter.&lt;/p>
&lt;p>This could be useful for providing clusters
with unique lookup names, such that clients are able to identify clusters from their responses.&lt;/p>
&lt;p>To lookup the details of this service, run &lt;code>kubectl describe service agones-ping-http-service --namespace=agones-system&lt;/code>&lt;/p>
&lt;h2 id="udp-service">UDP Service&lt;/h2>
&lt;p>The UDP ping service is a rate limited UDP echo service that returns the udp packet that it receives to its designated
sender.&lt;/p>
&lt;p>Since UDP sender details can be spoofed, this service is rate limited to 20 requests per second,
per sender address, per running instance (default is 2).&lt;/p>
&lt;p>This rate limit can be raised or lowered via the Helm install parameter &lt;code>agones.ping.udp.rateLimit&lt;/code>.&lt;/p>
&lt;p>UDP packets are also limited to 1024 bytes in size.&lt;/p>
&lt;p>To lookup the details of this service, run &lt;code>kubectl describe service agones-ping-udp-service --namespace=agones-system&lt;/code>&lt;/p>
&lt;h2 id="client-side-tooling">Client side tooling&lt;/h2>
&lt;p>We deliberately didn&amp;rsquo;t provide any game client libraries, as all major languages and engines have capabilities
to send HTTP requests as well as UDP packets.&lt;/p></description></item><item><title>Docs: Metrics</title><link>http://localhost:1313/docs/guides/metrics/</link><pubDate>Thu, 03 Jan 2019 03:58:19 +0000</pubDate><guid>http://localhost:1313/docs/guides/metrics/</guid><description>
&lt;p>Code Blind controller exposes metrics via &lt;a href="https://opencensus.io/">OpenCensus&lt;/a>. OpenCensus is a single distribution of libraries that collect metrics and distributed traces from your services, we only use it for metrics but it will allow us to support multiple exporters in the future.&lt;/p>
&lt;p>We choose to start with &lt;a href="https://prometheus.io/">Prometheus&lt;/a> as this is the most popular with Kubernetes but it is also compatible with Cloud Monitoring.
If you need another exporter, check the &lt;a href="https://opencensus.io/exporters/supported-exporters/go/">list of supported&lt;/a> exporters. It should be pretty straightforward to register a new one. (GitHub PRs are more than welcome.)&lt;/p>
&lt;p>We plan to support multiple exporters in the future via environment variables and helm flags.&lt;/p>
&lt;h2 id="backend-integrations">Backend integrations&lt;/h2>
&lt;h3 id="prometheus">Prometheus&lt;/h3>
&lt;p>If you are running a &lt;a href="https://prometheus.io/">Prometheus&lt;/a> instance you just need to ensure that metrics and kubernetes service discovery are enabled. (helm chart values &lt;code>agones.metrics.prometheusEnabled&lt;/code> and &lt;code>agones.metrics.prometheusServiceDiscovery&lt;/code>). This will automatically add annotations required by Prometheus to discover Code Blind metrics and start collecting them. (see &lt;a href="https://github.com/prometheus/prometheus/tree/main/documentation/examples/kubernetes-rabbitmq">example&lt;/a>)&lt;/p>
&lt;p>If your Prometheus metrics collection agent requires that you scrape from the pods directly(such as with &lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus">Google Cloud Managed Prometheus&lt;/a>), then the metrics ports for the controller and allocator will both be named &lt;code>http&lt;/code> and exposed on &lt;code>8080&lt;/code>. In the case of the allocator, the port name and number can be overriden with the &lt;code>agones.allocator.serviceMetrics.http.portName&lt;/code> and &lt;code>agones.allocator.serviceMetrics.http.port&lt;/code> helm chart values.&lt;/p>
&lt;h3 id="prometheus-operator">Prometheus Operator&lt;/h3>
&lt;p>If you have &lt;a href="https://github.com/coreos/prometheus-operator">Prometheus operator&lt;/a> installed in your cluster, just enable ServiceMonitor installation in values:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">agones&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metrics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">serviceMonitor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">enabled&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="google-cloud-managed-service-for-prometheus">Google Cloud Managed Service for Prometheus&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus">Google Cloud Managed Service for Prometheus&lt;/a> is a fully managed multi-cloud solution for &lt;a href="https://prometheus.io/">Prometheus&lt;/a>.
If you wish to use Managed Prometheus with Code Blind, follow the &lt;a href="http://localhost:1313/docs/guides/metrics/#google-cloud-managed-service-for-prometheus-installation">Google Cloud Managed Service for Prometheus installation steps&lt;/a>.&lt;/p>
&lt;h3 id="google-cloud-monitoring-formerly-stackdriver">Google Cloud Monitoring (formerly Stackdriver)&lt;/h3>
&lt;p>We support the &lt;a href="https://opencensus.io/exporters/supported-exporters/go/stackdriver/">OpenCensus Stackdriver exporter&lt;/a>.
In order to use it you should enable &lt;a href="https://cloud.google.com/monitoring/api/enable-api">Cloud Monitoring API&lt;/a> in Google Cloud Console.
Follow the &lt;a href="http://localhost:1313/docs/guides/metrics/#google-cloud-monitoring-installation">Google Cloud Monitoring installation steps&lt;/a> to see your metrics in Cloud Monitoring.&lt;/p>
&lt;h2 id="metrics-available">Metrics available&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>agones_gameservers_count&lt;/td>
&lt;td>The number of gameservers per fleet and status&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_gameserver_allocations_duration_seconds&lt;/td>
&lt;td>The distribution of gameserver allocation requests latencies&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_gameservers_total&lt;/td>
&lt;td>The total of gameservers per fleet and status&lt;/td>
&lt;td>counter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_gameserver_player_connected_total&lt;/td>
&lt;td>The total number of players connected to gameservers (Only available when &lt;a href="http://localhost:1313/docs/guides/player-tracking/">player tracking&lt;/a> is enabled)&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_gameserver_player_capacity_total&lt;/td>
&lt;td>The available capacity for players on gameservers (Only available when &lt;a href="http://localhost:1313/docs/guides/player-tracking/">player tracking&lt;/a> is enabled)&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_fleets_replicas_count&lt;/td>
&lt;td>The number of replicas per fleet (total, desired, ready, reserved, allocated)&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_fleet_autoscalers_able_to_scale&lt;/td>
&lt;td>The fleet autoscaler can access the fleet to scale&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_fleet_autoscalers_buffer_limits&lt;/td>
&lt;td>The limits of buffer based fleet autoscalers (min, max)&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_fleet_autoscalers_buffer_size&lt;/td>
&lt;td>The buffer size of fleet autoscalers (count or percentage)&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_fleet_autoscalers_current_replicas_count&lt;/td>
&lt;td>The current replicas count as seen by autoscalers&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_fleet_autoscalers_desired_replicas_count&lt;/td>
&lt;td>The desired replicas count as seen by autoscalers&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_fleet_autoscalers_limited&lt;/td>
&lt;td>The fleet autoscaler is outside the limits set by MinReplicas and MaxReplicas.&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_gameservers_node_count&lt;/td>
&lt;td>The distribution of gameservers per node&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_nodes_count&lt;/td>
&lt;td>The count of nodes empty and with gameservers&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_gameservers_state_duration&lt;/td>
&lt;td>The distribution of gameserver state duration in seconds. Note: this metric could have some missing samples by design. Do not use the &lt;code>_total&lt;/code> counter as the real value for state changes.&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_http_request_total&lt;/td>
&lt;td>The total of HTTP requests to the Kubernetes API by status code&lt;/td>
&lt;td>counter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_http_request_duration_seconds&lt;/td>
&lt;td>The distribution of HTTP requests latencies to the Kubernetes API by status code&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_cache_list_total&lt;/td>
&lt;td>The total number of list operations for client-go caches&lt;/td>
&lt;td>counter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_cache_list_duration_seconds&lt;/td>
&lt;td>Duration of a Kubernetes list API call in seconds&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_cache_list_items&lt;/td>
&lt;td>Count of items in a list from the Kubernetes API&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_cache_watches_total&lt;/td>
&lt;td>The total number of watch operations for client-go caches&lt;/td>
&lt;td>counter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_cache_last_resource_version&lt;/td>
&lt;td>Last resource version from the Kubernetes API&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_workqueue_depth&lt;/td>
&lt;td>Current depth of the work queue&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_workqueue_latency_seconds&lt;/td>
&lt;td>How long an item stays in the work queue&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_workqueue_items_total&lt;/td>
&lt;td>Total number of items added to the work queue&lt;/td>
&lt;td>counter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_workqueue_work_duration_seconds&lt;/td>
&lt;td>How long processing an item from the work queue takes&lt;/td>
&lt;td>histogram&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_workqueue_retries_total&lt;/td>
&lt;td>Total number of items retried to the work queue&lt;/td>
&lt;td>counter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_workqueue_longest_running_processor&lt;/td>
&lt;td>How long the longest running workqueue processor has been running in microseconds&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>agones_k8s_client_workqueue_unfinished_work_seconds&lt;/td>
&lt;td>How long unfinished work has been sitting in the workqueue in seconds&lt;/td>
&lt;td>gauge&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dropping-metric-labels">Dropping Metric Labels&lt;/h3>
&lt;p>When a Fleet or FleetAutoscaler is deleted from the system, Code Blind will automatically clear metrics that utilise
their name as a label from the exported metrics, so the metrics exported do not continuously grow in size over the
lifecycle of the Code Blind installation.&lt;/p>
&lt;h2 id="dashboard">Dashboard&lt;/h2>
&lt;h3 id="grafana-dashboards">Grafana Dashboards&lt;/h3>
&lt;p>We provide a set of useful &lt;a href="https://grafana.com/">Grafana&lt;/a> dashboards to monitor Code Blind workload, they are located under the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>grafana folder&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Autoscalers&lt;/a> allows you to monitor your current autoscalers replicas request as well as fleet replicas allocation and readyness statuses. You can only select one autoscaler at the time using the provided dropdown.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind GameServers&lt;/a> displays your current game servers workload status (allocations, game servers statuses, fleets replicas) with optional fleet name filtering.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind GameServer Allocations&lt;/a> displays Code Blind gameservers allocations rates and counts per fleet.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Allocator Resource&lt;/a> displays Code Blind Allocators CPU, memory usage and also some useful Golang runtime metrics.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Status&lt;/a> displays Code Blind controller health status.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Controller Resource Usage&lt;/a> displays Code Blind Controller CPU and memory usage and also some Golang runtime metrics.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Controller go-client requests&lt;/a> displays Code Blind Controller Kubernetes API consumption.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Controller go-client caches&lt;/a> displays Code Blind Controller Kubernetes Watches/Lists operations used.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Controller go-client workqueues&lt;/a> displays Code Blind Controller workqueue processing time and rates.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>Code Blind Controller API Server requests&lt;/a> displays your current API server request rate, errors rate and request latencies with optional CustomResourceDefinition filtering by Types: fleets, gameserversets, gameservers, gameserverallocations.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Dashboard screenshots :&lt;/p>
&lt;p>&lt;img alt="grafana dashboard autoscalers" src="../../../images/grafana-dashboard-autoscalers.png">&lt;/p>
&lt;p>&lt;img alt="grafana dashboard controller" src="../../../images/grafana-dashboard-controller.png">&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
You can import our dashboards by copying the json content from
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>each config map&lt;/a> into your own instance of Grafana (+ &amp;gt; Create &amp;gt; Import &amp;gt; Or paste json) or follow the &lt;a href="http://localhost:1313/#installation">installation&lt;/a> guide.
&lt;/div>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>When operating a live multiplayer game you will need to observe performances, resource usage and availability to learn more about your system. This guide will explain how you can setup Prometheus and Grafana into your own Kubernetes cluster to monitor your Code Blind workload.&lt;/p>
&lt;p>Before attemping this guide you should make sure you have &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">kubectl&lt;/a> and &lt;a href="https://docs.helm.sh/using_helm/">helm&lt;/a> installed and configured to reach your kubernetes cluster.&lt;/p>
&lt;h3 id="prometheus-installation">Prometheus installation&lt;/h3>
&lt;p>Prometheus is an open source monitoring solution, we will use it to store Code Blind controller metrics and query back the data.&lt;/p>
&lt;p>Let&amp;rsquo;s install Prometheus using the &lt;a href="https://prometheus-community.github.io/helm-charts/">Prometheus Community Kubernetes Helm Charts&lt;/a> repository.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm repo update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm upgrade --install --wait prom prometheus-community/prometheus --namespace metrics --create-namespace &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --set server.global.scrape_interval&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>30s &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --set server.persistentVolume.enabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --set server.persistentVolume.size&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>64Gi &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -f ./build/prometheus.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For resiliency it is recommended to run Prometheus on a dedicated node which is separate from nodes where Game Servers
are scheduled. If you use the above command, with our
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/main/" target="_blank" data-proofer-ignore>prometheus.yaml&lt;/a> to set up Prometheus, it will schedule Prometheus pods on nodes
tainted with &lt;code>agones.dev/agones-metrics=true:NoExecute&lt;/code> and labeled with &lt;code>agones.dev/agones-metrics=true&lt;/code> if available.&lt;/p>
&lt;p>As an example, to set up a dedicated node pool for Prometheus on GKE, run the following command before installing Prometheus. Alternatively you can taint and label nodes manually.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gcloud container node-pools create agones-metrics --cluster&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>... --zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>... &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --node-taints agones.dev/agones-metrics&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>true:NoExecute &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --node-labels agones.dev/agones-metrics&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --num-nodes&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --machine-type&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>e2-standard-4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default we will disable the push gateway (we don&amp;rsquo;t need it for Code Blind) and other exporters.&lt;/p>
&lt;p>The helm chart supports
&lt;a href="https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector">nodeSelector&lt;/a>,
&lt;a href="https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity">affinity&lt;/a> and &lt;a href="https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/">toleration&lt;/a>, you can use them to schedule Prometheus deployments on an isolated node(s) to have an homogeneous game servers workload.&lt;/p>
&lt;p>This will install a Prometheus Server in your current cluster with &lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/">Persistent Volume Claim&lt;/a> (Deactivated for Minikube and Kind) for storing and querying time series, it will automatically start collecting metrics from Code Blind Controller.&lt;/p>
&lt;p>Finally, to access Prometheus metrics, rules and alerts explorer use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl port-forward deployments/prom-prometheus-server &lt;span style="color:#0000cf;font-weight:bold">9090&lt;/span> -n metrics
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you can access the prometheus dashboard &lt;a href="http://localhost:9090">http://localhost:9090&lt;/a>.&lt;/p>
&lt;p>On the landing page you can start exploring metrics by creating &lt;a href="https://prometheus.io/docs/prometheus/latest/querying/basics/">queries&lt;/a>. You can also verify what &lt;a href="http://localhost:9090/targets">targets&lt;/a> Prometheus currently monitors (Header Status &amp;gt; Targets), you should see Code Blind controller pod in the &lt;code>kubernetes-pods&lt;/code> section.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Metrics will be first registered when you will start using Code Blind.
&lt;/div>
&lt;p>Now let&amp;rsquo;s install some Grafana dashboards.&lt;/p>
&lt;h3 id="grafana-installation">Grafana installation&lt;/h3>
&lt;p>Grafana is a open source time series analytics platform which supports Prometheus data source. We can also easily import pre-built dashboards.&lt;/p>
&lt;p>First we will install &lt;a href="http://localhost:1313/docs/guides/metrics/#grafana-dashboards">Code Blind dashboard&lt;/a> as &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/">config maps&lt;/a> in our cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl apply -f ./build/grafana/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can install the
&lt;a href="https://grafana.github.io/helm-charts/">Grafana Community Kubernetes Helm Charts&lt;/a> from
their repository. (Replace &lt;code>&amp;lt;your-admin-password&amp;gt;&lt;/code> with the admin password of your choice)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>helm repo add grafana https://grafana.github.io/helm-charts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm repo update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm upgrade --install --wait grafana grafana/grafana --namespace metrics &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --set &lt;span style="color:#000">adminPassword&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your-admin-password&amp;gt; -f ./build/grafana.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will install Grafana with our prepopulated dashboards and prometheus datasource &lt;a href="http://localhost:1313/docs/guides/metrics/#prometheus-installation">previously installed&lt;/a>&lt;/p>
&lt;p>Finally to access dashboards run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl port-forward deployments/grafana &lt;span style="color:#0000cf;font-weight:bold">3000&lt;/span> -n metrics
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open a web browser to &lt;a href="http://localhost:3000">http://localhost:3000&lt;/a>, you should see Code Blind &lt;a href="http://localhost:1313/docs/guides/metrics/#grafana-dashboards">dashboards&lt;/a> after login as admin.&lt;/p>
&lt;h3 id="google-cloud-managed-service-for-prometheus-installation">Google Cloud Managed Service for Prometheus installation&lt;/h3>
&lt;p>To collect Code Blind metrics using &lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus">Managed Prometheus&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Follow the instructions to enable managed collection for a &lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus/setup-managed#enable-mgdcoll-gke">GKE cluster&lt;/a> or &lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus/setup-managed#enable-mgdcoll-non-gke">non-GKE cluster&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configure Managed Prometheus to scrape Code Blind by creating a &lt;code>PodMonitoring&lt;/code> resource:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl apply -n agones-system -f https://raw.githubusercontent.com/googleforgames/agones/release-1.38.0/build/prometheus-google-managed.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Confirm that you can see &lt;a href="https://cloud.google.com/monitoring/promql">Prometheus metrics in Cloud Monitoring&lt;/a>. If that&amp;rsquo;s all you need, you can stop here.&lt;/li>
&lt;/ul>
&lt;p>To install Grafana using a Managed Prometheus backend:&lt;/p>
&lt;ul>
&lt;li>Complete the &lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus/query#begin">Before you begin&lt;/a>. To align with the Code Blind &lt;a href="http://localhost:1313/docs/guides/metrics/#grafana-installation">Grafana installation&lt;/a>, we&amp;rsquo;ll be installing in the &lt;code>metrics&lt;/code> namespace, which you&amp;rsquo;ll need to create.
&lt;ul>
&lt;li>If your cluster has Workload Identity enabled, which is enabled on GKE Autopilot by default, follow &lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus/query#gmp-wli-svcacct">Configure a service account for Workload Identity&lt;/a> to ensure that you have appropriately authorized the default Kubernetes service account in the &lt;code>metrics&lt;/code> namespace.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Install the &lt;a href="https://cloud.google.com/stackdriver/docs/managed-prometheus/query#ui-prometheus">Standalone Prometheus frontend UI&lt;/a> in the &lt;code>metrics&lt;/code> namespace - this will act as your authentication proxy for PromQL queries.&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/docs/guides/metrics/#grafana-installation">Install Grafana as above&lt;/a>, using &lt;code>-f ./build/grafana-frontend.yaml&lt;/code> instead of &lt;code>-f ./build/grafana.yaml&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="google-cloud-monitoring-installation">Google Cloud Monitoring installation&lt;/h3>
&lt;p>In order to use &lt;a href="https://console.cloud.google.com/monitoring">Google Cloud Monitoring&lt;/a> you must &lt;a href="https://cloud.google.com/monitoring/api/enable-api">enable the Monitoring API&lt;/a> in the Google Cloud Console. The Cloud Monitoring exporter uses a strategy called Application Default Credentials (ADC) to find your application&amp;rsquo;s credentials. Details can be found in &lt;a href="https://cloud.google.com/docs/authentication/production">Setting Up Authentication for Server to Server Production Applications&lt;/a>.&lt;/p>
&lt;p>You need to grant all the necessary permissions to the users (see &lt;a href="https://cloud.google.com/monitoring/access-control">Access Control Guide&lt;/a>). The predefined role Monitoring Metric Writer contains those permissions. Use the following command to assign the role to your default service account.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gcloud projects add-iam-policy-binding &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>PROJECT_ID&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> --member serviceAccount:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>PROJECT_NUMBER&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>-compute@developer.gserviceaccount.com --role roles/monitoring.metricWriter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Cloud Operations for GKE (including Cloud Monitoring) is enabled by default on GKE clusters, however you can follow this &lt;a href="https://cloud.google.com/stackdriver/docs/solutions/gke/installing#upgrade-instructions">guide&lt;/a> if it is currently disabled in your GKE cluster.
&lt;/div>
&lt;p>Before proceeding, ensure you have created a metrics node pool as mentioned in the Google Cloud &lt;a href="http://localhost:1313/docs/installation/creating-cluster/gke/">installation guide&lt;/a>.&lt;/p>
&lt;p>The default metrics exporter installed with Code Blind is Prometheus. If you are using the &lt;a href="http://localhost:1313/docs/installation/install-agones/helm/">Helm installation&lt;/a>, you can install or upgrade Code Blind to use Cloud Monitoring, using the following chart parameters:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>helm upgrade --install --wait --set agones.metrics.stackdriverEnabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> --set agones.metrics.prometheusEnabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span> --set agones.metrics.prometheusServiceDiscovery&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span> my-release-name agones/agones --namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>agones-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If you are using the &lt;a href="http://localhost:1313/docs/installation/install-agones/yaml/">YAML installation&lt;/a>, follow the instructions on the page to change the above parameters by using helm to generate a custom YAML file locally.
&lt;/div>
&lt;p>With this configuration only the Cloud Monitoring exporter would be used instead of Prometheus exporter.&lt;/p>
&lt;h4 id="using-cloud-monitoring-with-workload-identity">Using Cloud Monitoring with Workload Identity&lt;/h4>
&lt;p>If you would like to enable Cloud Monitoring in conjunction with &lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity">Workload Identity&lt;/a>, there are a few extra steps you need to follow:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>When setting up the Google service account following the instructions for &lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity#authenticating_to">Authenticating to Google Cloud&lt;/a>, create two IAM policy bindings, one for &lt;code>serviceAccount:PROJECT_ID.svc.id.goog[agones-system/agones-controller]&lt;/code> and one for &lt;code>serviceAccount:PROJECT_ID.svc.id.goog[agones-system/agones-allocator]&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pass parameters to helm when installing Code Blind to add annotations to the &lt;code>agones-controller&lt;/code> and &lt;code>agones-allocator&lt;/code> Kubernetes service accounts:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>helm install my-release --namespace agones-system --create-namespace agones/agones --set agones.metrics.stackdriverEnabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> --set agones.metrics.prometheusEnabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span> --set agones.metrics.prometheusServiceDiscovery&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span> --set agones.serviceaccount.allocator.annotations.&lt;span style="color:#4e9a06">&amp;#34;iam\.gke\.io/gcp-service-account&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GSA_NAME@PROJECT_ID\.iam\.gserviceaccount\.com&amp;#34;&lt;/span> --set agones.serviceaccount.allocator.labels.&lt;span style="color:#4e9a06">&amp;#34;iam\.gke\.io/gcp-service-account&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GSA_NAME@PROJECT_ID\.iam\.gserviceaccount\.com&amp;#34;&lt;/span> --set agones.serviceaccount.controller.annotations.&lt;span style="color:#4e9a06">&amp;#34;iam\.gke\.io/gcp-service-account&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GSA_NAME@PROJECT_ID\.iam\.gserviceaccount\.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To verify that metrics are being sent to Cloud Monitoring, create a Fleet or a Gameserver and look for the metrics to show up in the Cloud Monitoring dashboard. Navigate to the &lt;a href="https://console.cloud.google.com/monitoring/metrics-explorer">Metrics explorer&lt;/a> and search for metrics with the prefix &lt;code>agones/&lt;/code>. Select a metric and look for data to be plotted in the graph to the right.&lt;/p>
&lt;p>An example of a custom dashboard is:&lt;/p>
&lt;p>&lt;img alt="cloud monitoring dashboard" src="../../../images/stackdriver-metrics-dashboard.png">&lt;/p>
&lt;p>Currently there exists only manual way of configuring Cloud Monitoring Dashboard. So it is up to you to set an Alignment Period (minimal is 1 minute), GroupBy, Filter parameters and other graph settings.&lt;/p>
&lt;h4 id="troubleshooting">Troubleshooting&lt;/h4>
&lt;p>If you can&amp;rsquo;t see Code Blind metrics you should have a look at the controller logs for connection errors. Also ensure that your cluster has the necessary credentials to interact with Cloud Monitoring. You can configure &lt;code>stackdriverProjectID&lt;/code> manually, if the automatic discovery is not working.&lt;/p>
&lt;p>Permissions problem example from controller logs:&lt;/p>
&lt;pre tabindex="0">&lt;code>Failed to export to Stackdriver: rpc error: code = PermissionDenied desc = Permission monitoring.metricDescriptors.create denied (or the resource may not exist).
&lt;/code>&lt;/pre>&lt;p>If you receive this error, ensure your service account has the role or corresponding permissions mentioned above.&lt;/p></description></item><item><title>Docs: Access Code Blind via the Kubernetes API</title><link>http://localhost:1313/docs/guides/access-api/</link><pubDate>Thu, 03 Jan 2019 01:20:41 +0000</pubDate><guid>http://localhost:1313/docs/guides/access-api/</guid><description>
&lt;p>Installing Code Blind creates several &lt;a href="https://kubernetes.io/docs/concepts/api-extension/custom-resources">Custom Resource Definitions (CRD)&lt;/a>,
which can be accessed and manipulated through the Kubernetes API.&lt;/p>
&lt;p>The detailed list of Code Blind CRDs with their parameters could be found here - &lt;a href="../../reference/agones_crd_api_reference/">Code Blind CRD API Reference&lt;/a>.&lt;/p>
&lt;p>Kubernetes has multiple &lt;a href="https://kubernetes.io/docs/reference/using-api/client-libraries/">client libraries&lt;/a>, however,
at time of writing, only
the &lt;a href="https://github.com/kubernetes/client-go">Go&lt;/a> and
&lt;a href="https://github.com/kubernetes-client/python/">Python&lt;/a> clients are documented to support accessing CRDs.&lt;/p>
&lt;p>This can be found in the &lt;a href="https://kubernetes.io/docs/concepts/api-extension/custom-resources/#accessing-a-custom-resource">Accessing a custom resource&lt;/a>
section of the Kubernetes documentation.&lt;/p>
&lt;p>At this time, we recommend interacting with Code Blind through the Go client that has been generated in this repository,
but other methods may also work as well.&lt;/p>
&lt;h2 id="go-client">Go Client&lt;/h2>
&lt;p>Kubernetes Go Client tooling generates a Client for Code Blind that we can use to interact with the Code Blind
installation on our Kubernetes cluster.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pkg.go.dev/agones.dev/agones/pkg/client/clientset/versioned">Godoc for the Code Blind Client&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pkg.go.dev/k8s.io/client-go/kubernetes">Godoc for the standard Kubernetes Client&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="authentication">Authentication&lt;/h3>
&lt;p>This client uses the same authentication mechanisms as the Kubernetes API.&lt;/p>
&lt;p>If you plan to run your code in the same cluster as the Code Blind install, have a look at the
&lt;a href="https://github.com/kubernetes/client-go/tree/master/examples/in-cluster-client-configuration">in cluster configuration&lt;/a>
example from the Kubernetes Client.&lt;/p>
&lt;p>If you plan to run your code outside the Kubernetes cluster as your Code Blind install,
look at the &lt;a href="https://github.com/kubernetes/client-go/tree/master/examples/out-of-cluster-client-configuration">out of cluster configuration&lt;/a>
example from the Kubernetes client.&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>The following is an example of a in-cluster configuration, that creates a &lt;code>Clientset&lt;/code> for Code Blind
and then creates a &lt;code>GameServer&lt;/code>.&lt;/p>
&lt;p>A full example code is available in the
&lt;a href="https://github.com/josephbarnett/codeblind.ai/blob/release-1.38.0/" target="_blank" data-proofer-ignore> example folder&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">agonesv1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;agones.dev/agones/pkg/apis/agones/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;agones.dev/agones/pkg/client/clientset/versioned&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;agones.dev/agones/pkg/util/runtime&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">corev1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/api/core/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">metav1&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/apis/meta/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/client-go/kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/client-go/rest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">rest&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">InClusterConfig&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">runtime&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewLoggerWithSource&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;main&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithError&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">Fatal&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Could not create in cluster config&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Access to standard Kubernetes resources through the Kubernetes Clientset
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// We don&amp;#39;t actually need this for this example, but it&amp;#39;s just here for
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// illustrative purposes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">kubeClient&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewForConfig&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithError&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">Fatal&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Could not create the kubernetes clientset&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Access to the Code Blind resources through the Code Blind Clientset
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Note that we reuse the same config as we used for the Kubernetes Clientset
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">agonesClient&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">versioned&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewForConfig&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithError&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">Fatal&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Could not create the agones api clientset&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Create a GameServer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">gs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">agonesv1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GameServer&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#000">GenerateName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;simple-game-server&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">agonesv1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GameServerSpec&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Container&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;simple-game-server&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#000">agonesv1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GameServerPort&lt;/span>&lt;span style="color:#000;font-weight:bold">{{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ContainerPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7654&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">HostPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7654&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;gameport&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">PortPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">agonesv1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Static&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">corev1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ProtocolUDP&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Template&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">corev1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">PodTemplateSpec&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">corev1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">PodSpec&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#000">corev1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Container&lt;/span>&lt;span style="color:#000;font-weight:bold">{{&lt;/span>&lt;span style="color:#000">Name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;simple-game-server&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;us-docker.pkg.dev/codeblind/examples/simple-server:0.27&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">}},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">newGS&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">agonesClient&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">AgonesV1&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">GameServers&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">Create&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TODO&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">gs&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">metav1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CreateOptions&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">panic&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Printf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;New game servers&amp;#39; name is: %s&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">newGS&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ObjectMeta&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Name&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to create GS using provided example, you can run it as a Kubernetes Job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl create -f https://raw.githubusercontent.com/googleforgames/agones/release-1.38.0/examples/crd-client/create-gs.yaml --namespace agones-system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl get pods --namespace agones-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>NAME READY STATUS RESTARTS AGE
create-gs-6wz86-7qsm5 0/1 Completed 0 6s
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl logs create-gs-6wz86-7qsm5 --namespace agones-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>{&amp;#34;message&amp;#34;:&amp;#34;\u0026{0xc0001dde00 default}&amp;#34;,&amp;#34;severity&amp;#34;:&amp;#34;info&amp;#34;,&amp;#34;source&amp;#34;:&amp;#34;main&amp;#34;,&amp;#34;time&amp;#34;:&amp;#34;2020-04-21T11:14:00.477576428Z&amp;#34;}
{&amp;#34;message&amp;#34;:&amp;#34;New GameServer name is: helm-test-server-fxfgg&amp;#34;,&amp;#34;severity&amp;#34;:&amp;#34;info&amp;#34;,&amp;#34;time&amp;#34;:&amp;#34;2020-04-21T11:14:00.516024697Z&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>You have just created a GameServer using Kubernetes Go Client.&lt;/p>
&lt;h2 id="best-practice-using-informers-and-listers">Best Practice: Using Informers and Listers&lt;/h2>
&lt;p>Almost all Kubernetes&amp;rsquo; controllers and custom controllers utilise &lt;code>Informers&lt;/code> and &lt;code>Listers&lt;/code>
to reduce the load on the Kubernetes&amp;rsquo;s control plane.&lt;/p>
&lt;p>Repetitive, direct access of the Kubernetes control plane API can significantly
reduce the performance of the cluster &amp;ndash; and Informers and Listers help resolving that issue.&lt;/p>
&lt;p>Informers and Listers reduce the load on the Kubernetes control plane
by creating, using and maintaining an eventually consistent an in-memory cache.
This can be watched and also queried with zero cost, since it will only read against
its in-memory model of the Kubernetes resources.&lt;/p>
&lt;p>Informer&amp;rsquo;s role and Lister&amp;rsquo;s role are different.&lt;/p>
&lt;p>An Informer is the mechanism for watching a Kubernetes object&amp;rsquo;s event,
such that when a Kubernetes object changes(e.g. CREATE,UPDATE,DELETE), the Informer is informed,
and can execute a callback with the relevant object as an argument.&lt;/p>
&lt;p>This can be very useful for building event based systems against the Kubernetes API.&lt;/p>
&lt;p>A Lister is the mechanism for querying Kubernetes object&amp;rsquo;s against the client side in-memory cache.
Since the Lister stores objects in an in-memory cache, queries against a come at practically no cost.&lt;/p>
&lt;p>Of course, Code Blind itself also uses Informers and Listers in its codebase.&lt;/p>
&lt;h3 id="example-1">Example&lt;/h3>
&lt;p>The following is an example of Informers and Listers,
that show the GameServer&amp;rsquo;s name &amp;amp; status &amp;amp; IPs in the Kubernetes cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;agones.dev/agones/pkg/client/clientset/versioned&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;agones.dev/agones/pkg/client/informers/externalversions&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;agones.dev/agones/pkg/util/runtime&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/apimachinery/pkg/labels&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/client-go/informers&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/client-go/kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;k8s.io/client-go/tools/cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">rest&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">InClusterConfig&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">runtime&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewLoggerWithSource&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;main&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithError&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">Fatal&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Could not create in cluster config&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">kubeClient&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">kubernetes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewForConfig&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">agonesClient&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">versioned&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewForConfig&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithError&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">Fatal&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Could not create the agones api clientset&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Create InformerFactory which create the informer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">informerFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">informers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewSharedInformerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">kubeClient&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Second&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">30&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">agonesInformerFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">externalversions&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewSharedInformerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">agonesClient&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Second&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">30&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Create Pod informer by informerFactory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">podInformer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">informerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Core&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">V1&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">Pods&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Create GameServer informer by informerFactory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">gameServers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">agonesInformerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Code&lt;/span> &lt;span style="color:#000">Blind&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">V1&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">GameServers&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">gsInformer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">gameServers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Informer&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Add EventHandler to informer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// When the object&amp;#39;s event happens, the function will be called
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// For example, when the pod is added, &amp;#39;AddFunc&amp;#39; will be called and put out the &amp;#34;Pod Added&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">podInformer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Informer&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">AddEventHandler&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cache&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ResourceEventHandlerFuncs&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">AddFunc&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">new&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Pod Added&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">UpdateFunc&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">old&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">new&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Pod Updated&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">DeleteFunc&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">old&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Pod Deleted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">gsInformer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">AddEventHandler&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cache&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ResourceEventHandlerFuncs&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">AddFunc&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">new&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GameServer Added&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">UpdateFunc&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">old&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">new&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GameServer Updated&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">DeleteFunc&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">old&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GameServer Deleted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ctx&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Background&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Start Go routines for informer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">informerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Start&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Done&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">agonesInformerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Start&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Done&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Wait until finish caching with List API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">informerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WaitForCacheSync&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Done&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">agonesInformerFactory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WaitForCacheSync&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Done&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Create Lister which can list objects from the in-memory-cache
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">podLister&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">podInformer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Lister&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">gsLister&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">gameServers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Lister&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Get List objects of Pods from Pod Lister
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">p&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">podLister&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Pods&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Get List objects of GameServers from GameServer Lister
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">gs&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">gsLister&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Everything&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">panic&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// Show GameServer&amp;#39;s name &amp;amp; status &amp;amp; IPs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">_&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">g&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">range&lt;/span> &lt;span style="color:#000">gs&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">a&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">p&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">g&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GetName&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">panic&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;------------------------------&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Name: %s&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">g&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GetName&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Status: %s&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">g&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Status&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">State&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;External IP: %s&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">g&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Status&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Address&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Infof&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Internal IP: %s&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">a&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Status&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">PodIP&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Sleep&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Second&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">25&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can list GameServer&amp;rsquo;s name and status and IPs using Kubernetes Informers and Listers.&lt;/p>
&lt;h2 id="direct-access-to-the-rest-api-via-kubectl">Direct Access to the REST API via Kubectl&lt;/h2>
&lt;p>If there isn&amp;rsquo;t a client written in your preferred language, it is always possible to communicate
directly with Kubernetes API to interact with Code Blind.&lt;/p>
&lt;p>The Kubernetes API can be authenticated and exposed locally through the
&lt;a href="https://kubernetes.io/docs/tasks/extend-kubernetes/http-proxy-access-api/">&lt;code>kubectl proxy&lt;/code>&lt;/a>&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl proxy &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Starting to serve on 127.0.0.1:8001
&lt;/code>&lt;/pre>&lt;h3 id="list-all-code-blind-endpoints">List all Code Blind endpoints&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://localhost:8001/apis &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep agones -A &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span> -B &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>{
&amp;#34;name&amp;#34;: &amp;#34;agones.dev&amp;#34;,
&amp;#34;versions&amp;#34;: [
{
&amp;#34;groupVersion&amp;#34;: &amp;#34;agones.dev/v1&amp;#34;,
&amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
}
],
&amp;#34;preferredVersion&amp;#34;: {
&amp;#34;groupVersion&amp;#34;: &amp;#34;agones.dev/v1&amp;#34;,
&amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
},
&amp;#34;serverAddressByClientCIDRs&amp;#34;: null
}
&lt;/code>&lt;/pre>&lt;h3 id="list-code-blind-resources">List Code Blind resources&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://localhost:8001/apis/agones.dev/v1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>{
&amp;#34;kind&amp;#34;: &amp;#34;APIResourceList&amp;#34;,
&amp;#34;apiVersion&amp;#34;: &amp;#34;v1&amp;#34;,
&amp;#34;groupVersion&amp;#34;: &amp;#34;agones.dev/v1&amp;#34;,
&amp;#34;resources&amp;#34;: [
{
&amp;#34;name&amp;#34;: &amp;#34;gameservers&amp;#34;,
&amp;#34;singularName&amp;#34;: &amp;#34;gameserver&amp;#34;,
&amp;#34;namespaced&amp;#34;: true,
&amp;#34;kind&amp;#34;: &amp;#34;GameServer&amp;#34;,
&amp;#34;verbs&amp;#34;: [
&amp;#34;delete&amp;#34;,
&amp;#34;deletecollection&amp;#34;,
&amp;#34;get&amp;#34;,
&amp;#34;list&amp;#34;,
&amp;#34;patch&amp;#34;,
&amp;#34;create&amp;#34;,
&amp;#34;update&amp;#34;,
&amp;#34;watch&amp;#34;
],
&amp;#34;shortNames&amp;#34;: [
&amp;#34;gs&amp;#34;
]
}
]
}
&lt;/code>&lt;/pre>&lt;h3 id="list-all-gameservers-in-the-default-namespace">List all gameservers in the default namespace&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://localhost:8001/apis/agones.dev/v1/namespaces/default/gameservers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>{
&amp;#34;apiVersion&amp;#34;: &amp;#34;agones.dev/v1&amp;#34;,
&amp;#34;items&amp;#34;: [
{
&amp;#34;apiVersion&amp;#34;: &amp;#34;agones.dev/v1&amp;#34;,
&amp;#34;kind&amp;#34;: &amp;#34;GameServer&amp;#34;,
&amp;#34;metadata&amp;#34;: {
&amp;#34;annotations&amp;#34;: {
&amp;#34;kubectl.kubernetes.io/last-applied-configuration&amp;#34;: &amp;#34;{\&amp;#34;apiVersion\&amp;#34;:\&amp;#34;agones.dev/v1\&amp;#34;,\&amp;#34;kind\&amp;#34;:\&amp;#34;GameServer\&amp;#34;,\&amp;#34;metadata\&amp;#34;:{\&amp;#34;annotations\&amp;#34;:{},\&amp;#34;name\&amp;#34;:\&amp;#34;simple-game-server\&amp;#34;,\&amp;#34;namespace\&amp;#34;:\&amp;#34;default\&amp;#34;},\&amp;#34;spec\&amp;#34;:{\&amp;#34;containerPort\&amp;#34;:7654,\&amp;#34;hostPort\&amp;#34;:7777,\&amp;#34;portPolicy\&amp;#34;:\&amp;#34;static\&amp;#34;,\&amp;#34;template\&amp;#34;:{\&amp;#34;spec\&amp;#34;:{\&amp;#34;containers\&amp;#34;:[{\&amp;#34;image\&amp;#34;:\&amp;#34;us-docker.pkg.dev/codeblind/examples/simple-server:0.27\&amp;#34;,\&amp;#34;name\&amp;#34;:\&amp;#34;simple-game-server\&amp;#34;}]}}}}\n&amp;#34;
},
&amp;#34;clusterName&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;creationTimestamp&amp;#34;: &amp;#34;2018-03-02T21:41:05Z&amp;#34;,
&amp;#34;finalizers&amp;#34;: [
&amp;#34;agones.dev&amp;#34;
],
&amp;#34;generation&amp;#34;: 0,
&amp;#34;name&amp;#34;: &amp;#34;simple-game-server&amp;#34;,
&amp;#34;namespace&amp;#34;: &amp;#34;default&amp;#34;,
&amp;#34;resourceVersion&amp;#34;: &amp;#34;760&amp;#34;,
&amp;#34;selfLink&amp;#34;: &amp;#34;/apis/agones.dev/v1/namespaces/default/gameservers/simple-game-server&amp;#34;,
&amp;#34;uid&amp;#34;: &amp;#34;692beea6-1e62-11e8-beb2-080027637781&amp;#34;
},
&amp;#34;spec&amp;#34;: {
&amp;#34;PortPolicy&amp;#34;: &amp;#34;Static&amp;#34;,
&amp;#34;container&amp;#34;: &amp;#34;simple-game-server&amp;#34;,
&amp;#34;containerPort&amp;#34;: 7654,
&amp;#34;health&amp;#34;: {
&amp;#34;failureThreshold&amp;#34;: 3,
&amp;#34;initialDelaySeconds&amp;#34;: 5,
&amp;#34;periodSeconds&amp;#34;: 5
},
&amp;#34;hostPort&amp;#34;: 7777,
&amp;#34;protocol&amp;#34;: &amp;#34;UDP&amp;#34;,
&amp;#34;template&amp;#34;: {
&amp;#34;metadata&amp;#34;: {
&amp;#34;creationTimestamp&amp;#34;: null
},
&amp;#34;spec&amp;#34;: {
&amp;#34;containers&amp;#34;: [
{
&amp;#34;image&amp;#34;: &amp;#34;us-docker.pkg.dev/codeblind/examples/simple-server:0.27&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;simple-game-server&amp;#34;,
&amp;#34;resources&amp;#34;: {}
}
]
}
}
},
&amp;#34;status&amp;#34;: {
&amp;#34;address&amp;#34;: &amp;#34;192.168.99.100&amp;#34;,
&amp;#34;nodeName&amp;#34;: &amp;#34;agones&amp;#34;,
&amp;#34;port&amp;#34;: 7777,
&amp;#34;state&amp;#34;: &amp;#34;Ready&amp;#34;
}
}
],
&amp;#34;kind&amp;#34;: &amp;#34;GameServerList&amp;#34;,
&amp;#34;metadata&amp;#34;: {
&amp;#34;continue&amp;#34;: &amp;#34;&amp;#34;,
&amp;#34;resourceVersion&amp;#34;: &amp;#34;1062&amp;#34;,
&amp;#34;selfLink&amp;#34;: &amp;#34;/apis/agones.dev/v1/namespaces/default/gameservers&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;h3 id="allocate-a-gameserver-from-a-fleet-named-simple-game-server-with-gameserverallocation">Allocate a gameserver from a fleet named &amp;lsquo;simple-game-server&amp;rsquo;, with GameServerAllocation&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -d &lt;span style="color:#4e9a06">&amp;#39;{&amp;#34;apiVersion&amp;#34;:&amp;#34;allocation.agones.dev/v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;GameServerAllocation&amp;#34;,&amp;#34;spec&amp;#34;:{&amp;#34;required&amp;#34;:{&amp;#34;matchLabels&amp;#34;:{&amp;#34;agones.dev/fleet&amp;#34;:&amp;#34;simple-game-server&amp;#34;}}}}&amp;#39;&lt;/span> -H &lt;span style="color:#4e9a06">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X POST http://localhost:8001/apis/allocation.agones.dev/v1/namespaces/default/gameserverallocations
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>{
&amp;#34;kind&amp;#34;: &amp;#34;GameServerAllocation&amp;#34;,
&amp;#34;apiVersion&amp;#34;: &amp;#34;allocation.agones.dev/v1&amp;#34;,
&amp;#34;metadata&amp;#34;: {
&amp;#34;name&amp;#34;: &amp;#34;simple-game-server-v6jwb-cmdcv&amp;#34;,
&amp;#34;namespace&amp;#34;: &amp;#34;default&amp;#34;,
&amp;#34;creationTimestamp&amp;#34;: &amp;#34;2019-07-03T17:19:47Z&amp;#34;
},
&amp;#34;spec&amp;#34;: {
&amp;#34;multiClusterSetting&amp;#34;: {
&amp;#34;policySelector&amp;#34;: {}
},
&amp;#34;required&amp;#34;: {
&amp;#34;matchLabels&amp;#34;: {
&amp;#34;agones.dev/fleet&amp;#34;: &amp;#34;simple-game-server&amp;#34;
}
},
&amp;#34;scheduling&amp;#34;: &amp;#34;Packed&amp;#34;,
&amp;#34;metadata&amp;#34;: {}
},
&amp;#34;status&amp;#34;: {
&amp;#34;state&amp;#34;: &amp;#34;Allocated&amp;#34;,
&amp;#34;gameServerName&amp;#34;: &amp;#34;simple-game-server-v6jwb-cmdcv&amp;#34;,
&amp;#34;ports&amp;#34;: [
{
&amp;#34;name&amp;#34;: &amp;#34;default&amp;#34;,
&amp;#34;port&amp;#34;: 7445
}
],
&amp;#34;address&amp;#34;: &amp;#34;34.94.118.237&amp;#34;,
&amp;#34;nodeName&amp;#34;: &amp;#34;gke-test-cluster-default-f11755a7-5km3&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;p>You may wish to review the &lt;a href="http://localhost:1313/docs/reference/agones_crd_api_reference/">Code Blind Kubernetes API&lt;/a> for the full data structure reference.&lt;/p>
&lt;p>The &lt;a href="https://kubernetes.io/docs/reference/using-api/api-concepts/">Kubernetes API Concepts&lt;/a>
section may also provide the more details on the API conventions that are used in the Kubernetes API.&lt;/p>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;ul>
&lt;li>Learn how to use &lt;a href="http://localhost:1313/docs/advanced/allocator-service/">Allocator Service&lt;/a> for single and multi-cluster Allocation.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Troubleshooting</title><link>http://localhost:1313/docs/guides/troubleshooting/</link><pubDate>Thu, 03 Jan 2019 01:20:49 +0000</pubDate><guid>http://localhost:1313/docs/guides/troubleshooting/</guid><description>
&lt;h2 id="something-went-wrong-with-my-gameserver">Something went wrong with my GameServer&lt;/h2>
&lt;p>If there is something going wrong with your GameServer, there are a few approaches to determining the cause:&lt;/p>
&lt;h3 id="run-with-the-local-sdk-server">Run with the local SDK server&lt;/h3>
&lt;p>A good first step for seeing what may be going wrong is replicating the issue locally. To do this you can take
advantage of the Code Blind &lt;a href="http://localhost:1313/docs/guides/local-game-server/">local SDK server&lt;/a>
, with the following troubleshooting steps:&lt;/p>
&lt;ol>
&lt;li>Run your game server as a local binary against the local SDK server&lt;/li>
&lt;li>Run your game server container against the local SDK server. It&amp;rsquo;s worth noting that running with
&lt;code>docker run --network=host ...&lt;/code> can be an easy way to allow your game server container(s) access to the local SDK
server)&lt;/li>
&lt;/ol>
&lt;p>At each stage, keep an eye on the logs of your game server binary, and the local SDK server, and ensure there are no system
errors.&lt;/p>
&lt;h3 id="run-as-a-gameserver-rather-than-a-fleet">Run as a &lt;code>GameServer&lt;/code> rather than a &lt;code>Fleet&lt;/code>&lt;/h3>
&lt;p>A &lt;code>Fleet&lt;/code> will automatically replace any unhealthy &lt;code>GameServer&lt;/code> under its control - which can make it hard to catch
all the details to determine the cause.&lt;/p>
&lt;p>To work around this, instantiate a single instance of your game server as a&lt;br>
&lt;a href="http://localhost:1313/docs/reference/gameserver/">GameServer&lt;/a> within your Code Blind cluster.&lt;/p>
&lt;p>This &lt;code>GameServer&lt;/code> will not be replaced if it moves to an Unhealthy state, giving you time to introspect what is
going wrong.&lt;/p>
&lt;h3 id="introspect-with-kubernetes-tooling">Introspect with Kubernetes tooling&lt;/h3>
&lt;p>There are many Kubernetes tools that will help with determining where things have potentially gone wrong for your
game server. Here are a few you may want to try.&lt;/p>
&lt;h4 id="kubectl-describe">kubectl describe&lt;/h4>
&lt;p>Depending on what is happening, you may want to run &lt;code>kubectl describe &amp;lt;gameserver name&amp;gt;&lt;/code> to view the events
that are associated with that particular &lt;code>GameServer&lt;/code> resource. This can give you insight into the lifecycle of the
&lt;code>GameServer&lt;/code> and if anything has gone wrong.&lt;/p>
&lt;p>For example, here we can see where the simple-game-server example has been moved to the &lt;code>Unhealthy&lt;/code> state
due to a crash in the backing &lt;code>GameServer&lt;/code> Pod container&amp;rsquo;s binary.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl describe gs simple-game-server-zqppv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Name: simple-game-server-zqppv
Namespace: default
Labels: &amp;lt;none&amp;gt;
Annotations: agones.dev/sdk-version: 1.0.0-dce1546
API Version: agones.dev/v1
Kind: GameServer
Metadata:
Creation Timestamp: 2019-08-16T21:25:44Z
Finalizers:
agones.dev
Generate Name: simple-game-server-
Generation: 1
Resource Version: 1378575
Self Link: /apis/agones.dev/v1/namespaces/default/gameservers/simple-game-server-zqppv
UID: 6818adc7-c06c-11e9-8dbd-42010a8a0109
Spec:
Container: simple-game-server
Health:
Failure Threshold: 3
Initial Delay Seconds: 5
Period Seconds: 5
Ports:
Container Port: 7654
Host Port: 7058
Name: default
Port Policy: Dynamic
Protocol: UDP
Scheduling: Packed
Template:
Metadata:
Creation Timestamp: &amp;lt;nil&amp;gt;
Spec:
Containers:
Image: us-docker.pkg.dev/codeblind/examples/simple-server:0.27
Name: simple-game-server
Resources:
Limits:
Cpu: 20m
Memory: 32Mi
Requests:
Cpu: 20m
Memory: 32Mi
Status:
Address: 35.230.59.117
Node Name: gke-test-cluster-default-590db5e4-4s6r
Ports:
Name: default
Port: 7058
Reserved Until: &amp;lt;nil&amp;gt;
State: Unhealthy
Events:
Type Reason Age From Message
---- ------ ---- ---- -------
Normal PortAllocation 72s gameserver-controller Port allocated
Normal Creating 72s gameserver-controller Pod simple-game-server-zqppv created
Normal Scheduled 72s gameserver-controller Address and port populated
Normal RequestReady 67s gameserver-sidecar SDK state change
Normal Ready 66s gameserver-controller SDK.Ready() complete
Warning Unhealthy 34s health-controller Issue with Gameserver pod
&lt;/code>&lt;/pre>&lt;p>The backing Pod has the same name as the &lt;code>GameServer&lt;/code> - so it&amp;rsquo;s also worth looking at the
details and events for the Pod to see if there are any issues there, such as restarts due to binary crashes etc.&lt;/p>
&lt;p>For example, you can see the restart count on the us-docker.pkg.dev/codeblind/examples/simple-server:0.27 container
is set to &lt;code>1&lt;/code>, due to the game server binary crash&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl describe pod simple-game-server-zqppv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Name: simple-game-server-zqppv
Namespace: default
Priority: 0
PriorityClassName: &amp;lt;none&amp;gt;
Node: gke-test-cluster-default-590db5e4-4s6r/10.138.0.23
Start Time: Fri, 16 Aug 2019 21:25:44 +0000
Labels: agones.dev/gameserver=simple-game-server-zqppv
agones.dev/role=gameserver
Annotations: agones.dev/container: simple-game-server
agones.dev/sdk-version: 1.0.0-dce1546
cluster-autoscaler.kubernetes.io/safe-to-evict: false
Status: Running
IP: 10.48.1.80
Controlled By: GameServer/simple-game-server-zqppv
Containers:
simple-game-server:
Container ID: docker://69eacd03cc89b0636b78abe47926b02183ba84d18fa20649ca443f5232511661
Image: us-docker.pkg.dev/codeblind/examples/simple-server:0.27
Image ID: docker-pullable://gcr.io/agones-images/simple-game-server@sha256:6a60eff5e68b88b5ce75ae98082d79cff36cda411a090f3495760e5c3b6c3575
Port: 7654/UDP
Host Port: 7058/UDP
State: Running
Started: Fri, 16 Aug 2019 21:26:22 +0000
Last State: Terminated
Reason: Completed
Exit Code: 0
Started: Fri, 16 Aug 2019 21:25:45 +0000
Finished: Fri, 16 Aug 2019 21:26:22 +0000
Ready: True
Restart Count: 1
Limits:
cpu: 20m
memory: 32Mi
Requests:
cpu: 20m
memory: 32Mi
Liveness: http-get http://:8080/gshealthz delay=5s timeout=1s period=5s #success=1 #failure=3
Environment: &amp;lt;none&amp;gt;
Mounts:
/var/run/secrets/kubernetes.io/serviceaccount from empty (ro)
agones-gameserver-sidecar:
Container ID: docker://f3c475c34d26232e19b60be65b03bc6ce41931f4c37e00770d3ab4a36281d31c
Image: gcr.io/agones-mark/agones-sdk:1.0.0-dce1546
Image ID: docker-pullable://gcr.io/agones-mark/agones-sdk@sha256:4b5693e95ee3023a2b2e2099d102bb6bac58d4ce0ac472e58a09cee6d160cd19
Port: &amp;lt;none&amp;gt;
Host Port: &amp;lt;none&amp;gt;
State: Running
Started: Fri, 16 Aug 2019 21:25:48 +0000
Ready: True
Restart Count: 0
Requests:
cpu: 30m
Liveness: http-get http://:8080/healthz delay=3s timeout=1s period=3s #success=1 #failure=3
Environment:
GAMESERVER_NAME: simple-game-server-zqppv
POD_NAMESPACE: default (v1:metadata.namespace)
Mounts:
/var/run/secrets/kubernetes.io/serviceaccount from agones-sdk-token-vr6qq (ro)
Conditions:
Type Status
Initialized True
Ready True
ContainersReady True
PodScheduled True
Volumes:
empty:
Type: EmptyDir (a temporary directory that shares a pod&amp;#39;s lifetime)
Medium:
agones-sdk-token-vr6qq:
Type: Secret (a volume populated by a Secret)
SecretName: agones-sdk-token-vr6qq
Optional: false
QoS Class: Burstable
Node-Selectors: &amp;lt;none&amp;gt;
Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s
node.kubernetes.io/unreachable:NoExecute for 300s
Events:
Type Reason Age From Message
---- ------ ---- ---- -------
Normal Scheduled 2m32s default-scheduler Successfully assigned default/simple-game-server-zqppv to gke-test-cluster-default-590db5e4-4s6r
Normal Pulling 2m31s kubelet, gke-test-cluster-default-590db5e4-4s6r pulling image &amp;#34;gcr.io/agones-mark/agones-sdk:1.0.0-dce1546&amp;#34;
Normal Started 2m28s kubelet, gke-test-cluster-default-590db5e4-4s6r Started container
Normal Pulled 2m28s kubelet, gke-test-cluster-default-590db5e4-4s6r Successfully pulled image &amp;#34;gcr.io/agones-mark/agones-sdk:1.0.0-dce1546&amp;#34;
Normal Created 2m28s kubelet, gke-test-cluster-default-590db5e4-4s6r Created container
Normal Created 114s (x2 over 2m31s) kubelet, gke-test-cluster-default-590db5e4-4s6r Created container
Normal Started 114s (x2 over 2m31s) kubelet, gke-test-cluster-default-590db5e4-4s6r Started container
Normal Pulled 114s (x2 over 2m31s) kubelet, gke-test-cluster-default-590db5e4-4s6r Container image &amp;#34;us-docker.pkg.dev/codeblind/examples/simple-server:0.27&amp;#34; already present on machine
&lt;/code>&lt;/pre>&lt;p>Finally, you can also get the logs of your &lt;code>GameServer&lt;/code> &lt;code>Pod&lt;/code> as well via &lt;code>kubectl logs &amp;lt;pod name&amp;gt; -c &amp;lt;game server container name&amp;gt;&lt;/code>, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl logs simple-game-server-zqppv -c simple-game-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>2019/08/16 21:26:23 Creating SDK instance
2019/08/16 21:26:24 Starting Health Ping
2019/08/16 21:26:24 Starting UDP server, listening on port 7654
2019/08/16 21:26:24 Marking this server as ready
&lt;/code>&lt;/pre>&lt;p>The above commands will only give the most recent container&amp;rsquo;s logs (so we won&amp;rsquo;t get the previous crash), but
you can use &lt;code>kubectl logs --previous=true simple-game-server-zqppv -c simple-game-server&lt;/code> to get the previous instance of the containers logs, or
use your Kubernetes platform of choice&amp;rsquo;s logging aggregation tools to view the crash details.&lt;/p>
&lt;h4 id="kubectl-events">kubectl events&lt;/h4>
&lt;p>The &amp;ldquo;Events&amp;rdquo; section that is seen at the bottom of a &lt;code>kubectl describe&lt;/code> is backed an actual &lt;code>Event&lt;/code> record in
Kubernetes, which can be queried - and is general persistent for an hour after it is created.&lt;/p>
&lt;p>Therefore, even a &lt;code>GameServer&lt;/code> or &lt;code>Pod&lt;/code> resource is no longer available in the system, its &lt;code>Events&lt;/code> may well be.&lt;/p>
&lt;p>&lt;code>kubectl get events&lt;/code> can be used to see all these events. This can also be grepped with the GameServer name to see
all events across both the &lt;code>GameServer&lt;/code> and its backing &lt;code>Pod&lt;/code>, like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get events &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep simple-game-server-v992s-jwpx2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>2m47s Normal PortAllocation gameserver/simple-game-server-v992s-jwpx2 Port allocated
2m47s Normal Creating gameserver/simple-game-server-v992s-jwpx2 Pod simple-game-server-v992s-jwpx2 created
2m47s Normal Scheduled pod/simple-game-server-v992s-jwpx2 Successfully assigned default/simple-game-server-v992s-jwpx2 to gke-test-cluster-default-77e7f57d-j1mp
2m47s Normal Scheduled gameserver/simple-game-server-v992s-jwpx2 Address and port populated
2m46s Normal Pulled pod/simple-game-server-v992s-jwpx2 Container image &amp;#34;us-docker.pkg.dev/codeblind/examples/simple-server:0.27&amp;#34; already present on machine
2m46s Normal Created pod/simple-game-server-v992s-jwpx2 Created container simple-game-server
2m45s Normal Started pod/simple-game-server-v992s-jwpx2 Started container simple-game-server
2m45s Normal Pulled pod/simple-game-server-v992s-jwpx2 Container image &amp;#34;gcr.io/agones-images/agones-sdk:1.7.0&amp;#34; already present on machine
2m45s Normal Created pod/simple-game-server-v992s-jwpx2 Created container agones-gameserver-sidecar
2m45s Normal Started pod/simple-game-server-v992s-jwpx2 Started container agones-gameserver-sidecar
2m45s Normal RequestReady gameserver/simple-game-server-v992s-jwpx2 SDK state change
2m45s Normal Ready gameserver/simple-game-server-v992s-jwpx2 SDK.Ready() complete
2m47s Normal SuccessfulCreate gameserverset/simple-game-server-v992s Created gameserver: simple-game-server-v992s-jwpx2
&lt;/code>&lt;/pre>&lt;h4 id="other-techniques">Other techniques&lt;/h4>
&lt;p>For more tips and tricks, the &lt;a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/#interacting-with-running-pods">Kubernetes Cheatsheet: Interactive with Pods&lt;/a>
also provides more troubleshooting techniques.&lt;/p>
&lt;h2 id="how-do-i-see-the-logs-for-code-blind">How do I see the logs for Code Blind?&lt;/h2>
&lt;p>If something is going wrong, and you want to see the logs for Code Blind, there are potentially two places you will want to
check:&lt;/p>
&lt;ol>
&lt;li>The controller: assuming you installed Code Blind in the &lt;code>agones-system&lt;/code> namespace, you will find that there
is a single pod called &lt;code>agones-controller-&amp;lt;hash&amp;gt;&lt;/code> (where hash is the unique code that Kubernetes generates)
that exists there, that you can get the logs from. This is the main
controller for Code Blind, and should be the first place to check when things go wrong.
&lt;ol>
&lt;li>To get the logs from this controller run:&lt;br>
&lt;code>kubectl logs --namespace=agones-system agones-controller-&amp;lt;hash&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>The SDK server sidecar: Code Blind runs a small &lt;a href="https://grpc.io/">gRPC&lt;/a> + http server for the SDK in a container in the
same network namespace as the game server container to connect to via the SDK.&lt;br>
The logs from this SDK server are also useful for tracking down issues, especially if you are having trouble with a
particular &lt;code>GameServer&lt;/code>.
&lt;ol>
&lt;li>To find the &lt;code>Pod&lt;/code> for the &lt;code>GameServer&lt;/code> look for the pod with a name that is prefixed with the name of the
owning &lt;code>GameServer&lt;/code>. For example if you have a &lt;code>GameServer&lt;/code> named &lt;code>simple-game-server&lt;/code>, it&amp;rsquo;s pod could potentially be named
&lt;code>simple-game-server-dnbwj&lt;/code>.&lt;/li>
&lt;li>To get the logs from that &lt;code>Pod&lt;/code>, we need to specify that we want the logs from the &lt;code>agones-gameserver-sidecar&lt;/code>
container. To do that, run the following:&lt;br>
&lt;code>kubectl logs simple-game-server-dnbwj -c agones-gameserver-sidecar&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>Code Blind uses JSON structured logging, therefore errors will be visible through the &lt;code>&amp;quot;severity&amp;quot;:&amp;quot;info&amp;quot;&lt;/code> key and value.&lt;/p>
&lt;h3 id="enable-debug-level-logging-for-the-sdk-server">Enable Debug Level Logging for the SDK Server&lt;/h3>
&lt;p>By default, the SDK Server binary is set to an &lt;code>Info&lt;/code> level of logging.&lt;/p>
&lt;p>You can use the &lt;code>sdkServer.logLevel&lt;/code> to increase this to &lt;code>Debug&lt;/code> levels, and see extra information about what is
happening with the SDK Server that runs alonside your game server container(s).&lt;/p>
&lt;p>See the &lt;a href="http://localhost:1313/docs/reference/gameserver/">GameServer reference&lt;/a> for configuration details.&lt;/p>
&lt;h3 id="enable-debug-level-logging-for-the-code-blind-controller">Enable Debug Level Logging for the Code Blind Controller&lt;/h3>
&lt;p>By default, the log level for the Code Blind controller is &amp;ldquo;info&amp;rdquo;. To get a more verbose log output, switch this to &amp;ldquo;debug&amp;rdquo;
via the &lt;code>agones.controller.logLevel&lt;/code>
&lt;a href="http://localhost:1313/docs/installation/install-agones/helm/#configuration">Helm Configuration parameters&lt;/a>
at installation.&lt;/p>
&lt;h2 id="the-feature-flag-i-enableddisabled-isnt-working-as-expected">The Feature Flag I enabled/disabled isn&amp;rsquo;t working as expected&lt;/h2>
&lt;p>It&amp;rsquo;s entirely possible that Alpha features may still have bugs in them (They are &lt;em>alpha&lt;/em> after all ðŸ˜ƒ), but the first
thing to check is what the actual &lt;a href="http://localhost:1313/docs/guides/feature-stages/#feature-gates">Feature Flags&lt;/a> states
were passed to Code Blind are, and that they were set correctly.&lt;/p>
&lt;p>The easiest way is to check the top &lt;code>info&lt;/code> level log lines from the Code Blind controller.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ kubectl logs -n agones-system agones-controller-7575dc59-7p2rg &lt;span style="color:#000;font-weight:bold">|&lt;/span> head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;filename&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;/home/agones/logs/agones-controller-20220615_211540.log&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;logging to file&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;numbackups&amp;#34;&lt;/span>:99,&lt;span style="color:#4e9a06">&amp;#34;severity&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;info&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;main&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;time&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;2022-06-15T21:15:40.309349789Z&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;logLevel&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;info&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;Setting LogLevel configuration&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;severity&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;info&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;main&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;time&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;2022-06-15T21:15:40.309403296Z&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ctlConf&amp;#34;&lt;/span>:&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;MinPort&amp;#34;&lt;/span>:7000,&lt;span style="color:#4e9a06">&amp;#34;MaxPort&amp;#34;&lt;/span>:8000,&lt;span style="color:#4e9a06">&amp;#34;SidecarImage&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;gcr.io/agones-images/agones-sdk:1.23.0&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;SidecarCPURequest&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;30m&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;SidecarCPULimit&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;SidecarMemoryRequest&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;SidecarMemoryLimit&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;SdkServiceAccount&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;agones-sdk&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;AlwaysPullSidecar&amp;#34;&lt;/span>:false,&lt;span style="color:#4e9a06">&amp;#34;PrometheusMetrics&amp;#34;&lt;/span>:true,&lt;span style="color:#4e9a06">&amp;#34;Stackdriver&amp;#34;&lt;/span>:false,&lt;span style="color:#4e9a06">&amp;#34;StackdriverLabels&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;KeyFile&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;/home/agones/certs/server.key&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;CertFile&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;/home/agones/certs/server.crt&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;KubeConfig&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;GCPProjectID&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;NumWorkers&amp;#34;&lt;/span>:100,&lt;span style="color:#4e9a06">&amp;#34;APIServerSustainedQPS&amp;#34;&lt;/span>:400,&lt;span style="color:#4e9a06">&amp;#34;APIServerBurstQPS&amp;#34;&lt;/span>:500,&lt;span style="color:#4e9a06">&amp;#34;LogDir&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;/home/agones/logs&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;LogLevel&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;info&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;LogSizeLimitMB&amp;#34;&lt;/span>:10000&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;featureGates&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;Example=true\u0026NodeExternalDNS=true\u0026PlayerAllocationFilter=false\u0026PlayerTracking=false&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;starting gameServer operator...&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;severity&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;info&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;main&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;time&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;2022-06-15T21:15:40.309528802Z&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;version&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;1.23.0&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>ctlConf&lt;/code> section has the full configuration for Code Blind as it was passed to the controller. Within that log line
there is a &lt;code>featureGates&lt;/code> key, that has the full Feature Gate configuration as a URL Query String (&lt;code>\u0026&lt;/code>
is JSON for &lt;code>&amp;amp;&lt;/code>), so you can see if the Feature Gates are set as expected.&lt;/p>
&lt;h2 id="i-uninstalled-code-blind-before-deleted-all-my-gameservers-and-now-they-wont-delete">I uninstalled Code Blind before deleted all my &lt;code>GameServers&lt;/code> and now they won&amp;rsquo;t delete&lt;/h2>
&lt;p>Code Blind &lt;code>GameServers&lt;/code> use &lt;a href="https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#finalizers">Finalizers&lt;/a>
to manage garbage collection of the &lt;code>GameServers&lt;/code>. This means that if the Code Blind controller
doesn&amp;rsquo;t remove the finalizer for you (i.e. if it has been uninstalled), it can be tricky to remove them all.&lt;/p>
&lt;p>Thankfully, if we create a patch to remove the finalizers from all GameServers, we can delete them with impunity.&lt;/p>
&lt;p>A quick one liner to do this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get gameserver -o name &lt;span style="color:#000;font-weight:bold">|&lt;/span> xargs -n1 -P1 -I&lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span> kubectl patch &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span> --type&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>merge -p &lt;span style="color:#4e9a06">&amp;#39;{&amp;#34;metadata&amp;#34;: {&amp;#34;finalizers&amp;#34;: []}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once this is done, you can &lt;code>kubectl delete gs --all&lt;/code> and clean everything up (if it&amp;rsquo;s not gone already).&lt;/p>
&lt;h2 id="im-getting-forbidden-errors-when-trying-to-install-code-blind">I&amp;rsquo;m getting Forbidden errors when trying to install Code Blind&lt;/h2>
&lt;p>Ensure that you are running Kubernetes 1.12 or later, which does not require any special
clusterrolebindings to install Code Blind.&lt;/p>
&lt;p>If you want to install Code Blind on an older version of Kubernetes, you need to create a
clusterrolebinding to add your identity as a cluster admin, e.g.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Kubernetes Engine&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create clusterrolebinding cluster-admin-binding &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --clusterrole cluster-admin --user &lt;span style="color:#4e9a06">`&lt;/span>gcloud config get-value account&lt;span style="color:#4e9a06">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Minikube&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create clusterrolebinding cluster-admin-binding &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --clusterrole&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>cluster-admin --serviceaccount&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>kube-system:default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On GKE, &lt;code>gcloud config get-value accounts&lt;/code> will return a lowercase email address, so if
you are using a CamelCase email, you may need to type it in manually.&lt;/p>
&lt;h2 id="im-getting-stuck-in-terminating-when-i-uninstall-code-blind">I&amp;rsquo;m getting stuck in &amp;ldquo;Terminating&amp;rdquo; when I uninstall Code Blind&lt;/h2>
&lt;p>If you try to uninstall the &lt;code>agones-system&lt;/code> namespace before you have removed all of the components in the namespace you may
end up in a &lt;code>Terminating&lt;/code> state.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get ns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>NAME STATUS AGE
agones-system Terminating 4d
&lt;/code>&lt;/pre>&lt;p>Fixing this up requires us to bypass the finalizer in Kubernetes (&lt;a href="https://www.ibm.com/support/knowledgecenter/en/SSBS6K_3.1.1/troubleshoot/ns_terminating.html">article link&lt;/a>), by manually changing the namespace details:&lt;/p>
&lt;p>First get the current state of the namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get namespace agones-system -o json &amp;gt;tmp.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit the response &lt;code>tmp.json&lt;/code> to remove the finalizer data, for example remove the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34;spec&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;finalizers&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">,&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open a new terminal to proxy traffic:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> kubectl proxy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Starting to serve on 127.0.0.1:8001
&lt;/code>&lt;/pre>&lt;p>Now make an API call to send the altered namespace data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> curl -k -H &lt;span style="color:#4e9a06">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X PUT --data-binary @tmp.json http://127.0.0.1:8001/api/v1/namespaces/agones-system/finalize
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You may need to clean up any other Code Blind related resources you have in your cluster at this point.&lt;/p></description></item></channel></rss>